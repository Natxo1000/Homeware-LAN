{"version":3,"sources":["functions.js","constants.js","components/web/MenuElement.js","components/web/Modal.js","components/devices/traits/OnOff.js","components/devices/aux/Information.js","components/devices/aux/Connecting.js","components/devices/aux/Edit.js","components/devices/Light.js","components/devices/Outlet.js","components/devices/traits/TemperatureAmbient.js","components/devices/traits/TemperatureSetting.js","components/devices/AcUnit.js","components/devices/AirFreshener.js","components/devices/AirPurifier.js","components/devices/Bed.js","components/devices/Fan.js","components/devices/Fireplace.js","components/devices/Radiator.js","components/devices/Switch.js","components/devices/Thermostat.js","components/devices/AirCooler.js","components/devices/Bathtub.js","components/devices/Awing.js","components/devices/Blinds.js","components/devices/Closet.js","components/devices/Curtain.js","components/devices/Door.js","components/devices/Drawer.js","components/devices/Garage.js","components/devices/Pergola.js","components/devices/Shutter.js","components/devices/Valve.js","components/devices/Window.js","components/devices/Lock.js","components/devices/Gate.js","components/devices/Heater.js","components/devices/Hood.js","components/devices/SecuritySystem.js","components/devices/Blender.js","components/devices/Global.js","components/devices/Scene.js","components/pages/Devices.js","components/editor/Text.js","components/editor/traits/Scene.js","components/editor/traits/OnOff.js","components/editor/traits/Brightness.js","components/editor/traits/FanSpeed.js","components/editor/traits/ColorSetting.js","components/editor/traits/TemperatureSetting.js","components/editor/traits/Toggles.js","components/editor/traits/Modes.js","components/editor/traits/HumiditySetting.js","components/editor/traits/OpenClose.js","components/editor/traits/Rotation.js","components/editor/traits/Fill.js","components/editor/traits/ArmDisarm.js","components/editor/traits/StartStop.js","components/editor/traits/Timer.js","components/editor/traits/TemperatureControl.js","components/editor/traits/Cook.js","components/editor/traits/SensorState.js","components/pages/Editor.js","components/pages/Info.js","components/pages/Connecting.js","components/pages/Tasks.js","components/manager/TriggerAddLogic.js","components/manager/Trigger.js","components/manager/Triggers.js","components/manager/TriggerAddTime.js","components/manager/TriggerAddDevice.js","components/manager/TriggerAddDeviceToDevice.js","components/manager/AddTrigger.js","components/manager/Target.js","components/manager/AddTarget.js","components/pages/Manager.js","components/pages/Settings.js","components/system/Component.js","components/pages/System.js","components/pages/Backup.js","components/pages/Access.js","components/pages/Logs.js","components/pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["getCookieValue","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","root","window","location","href","includes","deviceReference","devices","traits","attributes","commandOnlyOnOff","type","default","queryOnlyOnOff","params","commands","commandOnlyBrightness","colorModel","commandOnlyColorSetting","colorTemperatureRange","temperatureMinK","temperatureMaxK","content","availableThermostatModes","thermostatTemperatureRange","minThresholdCelsius","maxThresholdCelsius","thermostatTemperatureUnit","bufferRangeCelsius","commandOnlyTemperatureSetting","queryOnlyTemperatureSetting","discreteOnlyOpenClose","openDirection","commandOnlyOpenClose","queryOnlyOpenClose","commandOnlyRotation","supportsContinuousRotation","supportsDegrees","supportsPercent","rotationDegreesRange","rotationDegreesMin","rotationDegreesMax","command","description","sceneReversible","availableToggles","commandOnlyToggles","availableZones","pausable","maxTimerLimitSec","commandOnlyTimer","temperatureStepCelsius","temperatureUnitForUX","queryOnlyTemperatureControl","commandOnlyTemperatureControl","temperatureRange","availableFanSpeeds","speeds","ordered","reversible","commandOnlyFanSpeed","availableArmLevels","levels","availableFillLevels","humiditySetpointRange","minPercent","maxPercent","commandOnlyHumiditySetting","queryOnlyHumiditySetting","foodPresets","supportedCookingModes","availableModes","commandOnlyModes","sensorStatesSupported","thermostatTemperatureAmbient","commanded","thermostatTemperatureSetpoint","thermostatHumidityAmbient","thermostatMode","select","on","deactivate","brightness","online","color","spectrumRgb","thermostatTemperatureSetpointHigh","thermostatTemperatureSetpointLow","openPercent","rotationPercent","rotationDegrees","isLocked","isJammed","isDocked","isRunning","isPaused","activeZones","timerRemainingSec","timerPaused","temperatureSetpointCelsius","temperatureAmbientCelsius","currentFanSpeedSetting","isArmed","exitAllowance","isFilled","humiditySetpointPercent","humidityAmbientPercent","currentArmLevel","currentFillLevel","currentCookingMode","currentFoodPreset","currentFoodQuantity","currentFoodUnit","currentToggleSettings","currentModeSettings","MenuElement","props","className","src","image","alt","exec","onClick","title","to","Modal","trigger","modal","OnOff","toggle","bind","http","XMLHttpRequest","onload","e","readyState","status","this","reload","console","error","statusText","open","setRequestHeader","send","JSON","stringify","id","style","float","marginLeft","width","React","Component","Information","Connecting","Edit","Light","device","Object","keys","toString","spectrumRGB","color_strip","height","borderRadius","backgroundColor","opacity","paddingLeft","Outlet","TemperatureAmbient","marginTop","fontSize","marginRight","TemperatureSetting","up","down","update","temperature","param","value","AcUnit","AirFreshener","AirPurifier","Bed","Fan","Fireplace","Radiator","Switch","Thermostat","AirCooler","Bathtub","Awing","Blinds","Closet","Curtain","Door","Drawer","Garage","Pergola","Shutter","Valve","Window","Lock","Gate","Heater","Hood","SecuritySystem","Blender","Global","Scene","Devices","state","data","loadData","setInterval","parse","responseText","setState","map","Text","event","target","defaultValue","onChange","updateCheckbox","checked","attribute","Brightness","FanSpeed","updateFanSpeeds","addFanSpeed","speed_id","speed_attribute","temp_availableFanSpeeds","speed_values","speed_name","push","names_box","speed","lang","speed_synonym","placeholder","supportsFanSpeedPercent","ColorSetting","min","max","updateMode","addMode","mode_id","temp_availableThermostatModes","splice","join","modes","mode","Toggles","updatetoggle","addToggle","toggle_id","toggle_attribute","temp_availableToggles","name_values","toggles","name_synonym","Modes","temp_availableModes","values","settings","setting_name","setting_values","setting_synonym","settings_box","setting","HumiditySetting","OpenClose","Rotation","Fill","updateLevels","addLevel","level_id","level_attribute","temp_availableFillLevels","level_values","level_name","level","level_synonym","ArmDisarm","updateSecurityLevel","addSecurityLevel","temp_availableArmLevels","StartStop","updateArray","Timer","TemperatureControl","Cook","updatePreset","addPreset","temp_supportedCookingModes","preset_id","temp_foodPresets","food_synonyms","synonym","food_preset_name","supported_units","presets","preset","SensorState","sensor","availableStates","rawValueUnit","numericCapabilities","Editor","pathname","create","deviceInfo","defaultNames","nicknames","device_tratis","not_recomended_traits","updateNames","updateId","updateType","updateTraits","notRecomendedTraits","save","delete","renderAttrinutes","recomended_tratis","concat","filter","trait","index","sta","log","dumy_key","names","temp_device","key","temp_status","forEach","arr","ToastsStore","info","success","payload","confirm","warning","types","toLowerCase","disabled","hwVersion","swVersion","manufacturer","model","store","defaultnames","dev","topic","textAlign","Tasks","tasks","task","TriggerAddLogic","addOr","addAnd","openTriggerAssistant","addTriggerLogic","num_operations","triggers","operation","operations","op","Trigger","renderTriggerText","week","days","Triggers","TriggerAddTime","addTriggerOperation","hour","getElementById","minute","closeTriggerAssistant","TriggerAddDevice","updateDevice","updateParam","typeConversion","origen","int","list","bool","string","options","option","TriggerAddDeviceToDevice","device_a","device_b","updateDependencies","params_a","params_b","AddTrigger","timeTigger","deiceTrigger","deviceToDeviceTrigger","Target","marginBottom","AddTarget","addTarget","parseInt","Manager","trigger_assistant_parent","deleteTrigger","deleteTarget","devices_names","tas","parent","ts","Date","now","targets","Settings","google","ddns","mqtt","apikey","url","auth","token","fulfillment","enableDdnsProvider","hostname","URL","searchParams","get","enabled","google_url","client_id","client_secret","method","encType","action","user","password","ip","last","provider","username","ReactMarkdown","require","System","components","show_system_message","system_message","loadComponents","upgrade","areYouAwake","restart","reboot","shutdown","COMPONENTS_CHECK_INTERVAL","comp","response","setTimeout","upg","awa","res","reb","shu","component","enable","version","git","code","paddingRight","paddingTop","paddingBottom","border","source","Backup","String","Math","random","restore_url","backup","Access","checkEqualPassword","new_pass","change_password_message","new_pass_2","changePassword","pass","equal_passwords","generateAPIKey","Logs","page","previousPage","nextPage","downloadLog","reverse","homeware_lan_log","slice","register","severity","time","message","Login","enable_message","login","grantAccess","App","session","alert","checkoutVersion","checkoutLog","logout","menu","GIT_CHECKOUT_INTERVAL","LOG_CHECKOUT_INTERVAL","vers","latestRelease","tag_name","body","classList","exact","path","Boolean","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3bf2496a.chunk.js","sourcesContent":["function getCookieValue(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport default getCookieValue;\n","var root = window.location.href.includes('localhost') ? \"http://homeware.local/\" : \"/\"\n\nconst deviceReference = {\n  devices: {\n    \"action.devices.types.AC_UNIT\": {\n      name: \"AC unit\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRCOOLER\": {\n      name: \"Air cooler\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRFRESHENER\": {\n      name: \"Air freshener\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.AIRPURIFIER\": {\n      name: \"Air purifier\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.AWNING\": {\n      name: \"Awing\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BATHTUB\": {\n      name: \"Bathtub\",\n      traits: [\n        \"action.devices.traits.Fill\",\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.BED\": {\n      name: \"Bed\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BLINDS\": {\n      name: \"Blinds\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BLENDER\": {\n      name: \"Blender\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BOILER\": {\n      name: \"Boiler\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CARBON_MONOXIDE_DETECTOR\": {\n      name: \"Carbon monoxide detector\",\n      traits: [\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.CLOSET\": {\n      name: \"Closet\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.COFFE_MAKER\": {\n      name: \"Coffe maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.COOKTOP\": {\n      name: \"Cooktop\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CURTAIN\": {\n      name: \"Curtain\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DEHUMIDIFIER\": {\n      name: \"Dehumidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DEHYDRATOR\": {\n      name: \"Dehydrator\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DISHWASHER\": {\n      name: \"Dishwasher\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.DOOR\": {\n      name: \"Door\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRAWER\": {\n      name: \"Drawer\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRYER\": {\n      name: \"Dryer\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.FAN\": {\n      name: \"Fan\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FIREPLACE\": {\n      name: \"Fireplace\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FREEZER\": {\n      name: \"Fireplace\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FRYER\": {\n      name: \"Fryer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.GARAGE\": {\n      name: \"Garage\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GATE\": {\n      name: \"Gate\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GRILL\": {\n      name: \"Grill\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HEATER\": {\n      name: \"Heater\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\",\n      ]\n    },\n    \"action.devices.types.HOOD\": {\n      name: \"Hood\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HUMIDIFIER\": {\n      name: \"Humidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.KETTLE\": {\n      name: \"Kettle\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.LIGHT\": {\n      name: \"Light\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Brightness\",\n        \"action.devices.traits.ColorSetting\"\n      ]\n    },\n    \"action.devices.types.LOCK\": {\n      name: \"Lock\",\n      traits: [\n        \"action.devices.traits.LockUnlock\"\n      ]\n    },\n    \"action.devices.types.MICROWAVE\": {\n      name: \"Microwave\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ],\n    },\n    \"action.devices.types.MOP\": {\n      name: \"Mop\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MOWER\": {\n      name: \"Mower\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MULTICOOKER\": {\n      name: \"Multicooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.OUTLET\": {\n      name: \"Outlet\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.OVEN\": {\n      name: \"Oven\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.PERGOLA\": {\n      name: \"Pergola\",\n      traits: [\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.PRESSURECOOKER\": {\n      name: \"Pressure cooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.RADIATOR\": {\n      name: \"Radiator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.REFRIGERATOR\": {\n      name: \"Refrigerator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SENSOR\": {\n      name: \"Sensor\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.SECURITYSYSTEM\": {\n      name: \"Security system\",\n      traits: [\n        \"action.devices.traits.ArmDisarm\",\n        \"action.devices.traits.StatusReport\"\n      ]\n    },\n    \"action.devices.types.SHOWER\": {\n      name: \"Shower\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\"\n      ]\n    },\n    \"action.devices.types.SHUTTER\": {\n      name: \"Shutter\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.SMOKE_DETECTOR\": {\n      name: \"Smoke detector\",\n      traits: [\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.SOUSVIDE\": {\n      name: \"Sous vide\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SPRINKLER\": {\n      name: \"Sprinkler\",\n      traits: [\n        \"action.devices.traits.StartStop\"\n      ]\n    },\n    \"action.devices.types.STANDMIXER\": {\n      name: \"Stand mixer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SWITCH\": {\n      name: \"Switch\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.THERMOSTAT\": {\n      name: \"Thermostat\",\n      traits: [\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.VACUUM\": {\n      name: \"Vacum\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.VALVE\": {\n      name: \"Valve\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.WASHER\": {\n      name: \"Washer\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERHEATER\": {\n      name: \"Water heater\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERPURIFIER\": {\n      name: \"Water purifier\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERSOFTENER\": {\n      name: \"Water softener\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WINDOW\": {\n      name: \"Window\",\n      traits: [\n        \"action.devices.traits.LockUnlock\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.SCENE\": {\n      name: \"Scene\",\n      traits: [\n        \"action.devices.traits.Scene\"\n      ]\n    },\n    \"action.devices.types.YOGURTMAKER\": {\n      name: \"Yogurt maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    }\n  },\n  traits: {\n    \"action.devices.traits.OnOff\": {\n      name: 'Power control',\n      attributes: {\n        commandOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['on'],\n      commands: []\n    },\n    \"action.devices.traits.Brightness\": {\n      name: 'Brightness',\n      attributes: {\n        commandOnlyBrightness: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['brightness'],\n      commands: []\n    },\n    \"action.devices.traits.ColorSetting\": {\n      name: 'Color setting',\n      attributes: {\n        colorModel: {\n          type: \"string\",\n          default: \"rgb\"\n        },\n        commandOnlyColorSetting: {\n            type: \"bool\",\n            default: false\n        },\n        colorTemperatureRange: {\n          type: \"object\",\n          default: {\n            temperatureMinK: 4000,\n            temperatureMaxK: 4200\n          },\n          content: {\n            temperatureMinK: {\n              type: \"int\",\n              default: 4000\n            },\n            temperatureMaxK: {\n              type: \"int\",\n              default: 4200\n            }\n          }\n        }\n      },\n      params: ['color'],\n      commands: []\n    },\n    \"action.devices.traits.TemperatureSetting\": {\n      name: 'Temperature Settings',\n      attributes: {\n        availableThermostatModes: {\n          type: \"select\",\n          default: \"off,heat,cool\"\n        },\n        thermostatTemperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 18,\n            maxThresholdCelsius: 34\n          }\n        },\n        thermostatTemperatureUnit: {\n          type: \"string\",\n          default: \"C\"\n        },\n        bufferRangeCelsius: {\n          type: \"int\",\n          default: 2\n        },\n        commandOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: [\n        'thermostatMode',\n        'thermostatTemperatureSetpoint',\n        'thermostatTemperatureAmbient',\n        'thermostatTemperatureSetpointHigh',\n        'thermostatTemperatureSetpointLow',\n        'thermostatHumidityAmbient'\n      ],\n      commands: []\n    },\n    \"action.devices.traits.OpenClose\": {\n      name: 'Open or close',\n      attributes: {\n        discreteOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        openDirection: {\n          type: \"array\",\n          default: [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\",\"IN\",\"OUT\"]\n        },\n        commandOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['openPercent'],\n      commands: []\n    },\n    \"action.devices.traits.Rotation\": {\n      name: 'Rotation - Google doesn\\'t respond',\n      attributes: {\n        commandOnlyRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsContinuousRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsDegrees: {\n          type: \"bool\",\n          default: false\n        },\n        supportsPercent: {\n          type: \"bool\",\n          default: false\n        },\n        rotationDegreesRange: {\n          type: \"object\",\n          default: {\n            rotationDegreesMin: 0,\n            rotationDegreesMax: 0\n          },\n          content: {\n            rotationDegreesMin: {\n              type: \"int\"\n            },\n            rotationDegreesMax: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      params: ['rotationPercent','rotationDegrees'],\n      commands: []\n    },\n    \"action.devices.traits.LockUnlock\": {\n      name: 'Lock or unlock',\n      attributes: {},\n      params: ['isLocked','isJammed'],\n      commands: [\n        {\n          command: 'lock',\n          description: 'Lock'\n        },\n        {\n          command: 'unlock',\n          description: 'Unlock'\n        }\n      ]\n    },\n    \"action.devices.traits.Scene\": {\n      name: 'Scene',\n      attributes: {\n        sceneReversible: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      params: ['deactivate'],\n      commands: []\n    },\n    \"action.devices.traits.Dock\": {\n      name: 'Dock',\n      attributes: {},\n      params: ['isDocked'],\n      commands: []\n    },\n    \"action.devices.traits.Toggles\": {\n      name: 'Toogles',\n      attributes: {\n        availableToggles: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyToggles: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['currentToggleSettings'],\n      commands: []\n    },\n    \"action.devices.traits.StartStop\": {\n      name: 'Start and stop',\n      attributes: {\n        availableZones: {\n          type: \"array\",\n          default: []\n        },\n        pausable: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['isRunning','isPaused','activeZones'],\n      commands: [\n        {\n          command: 'start',\n          description: 'Start the process'\n        },\n        {\n          command: 'stop',\n          description: 'Stop the process'\n        },\n        {\n          command: 'pause',\n          description: 'Pause cooking'\n        },\n        {\n          command: 'unpause',\n          description: 'Unpause cooking'\n        }\n      ]\n    },\n    \"action.devices.traits.Timer\": {\n      name: 'Timer - Google doesn\\'t respond',\n      attributes: {\n        maxTimerLimitSec: {\n          type: \"int\",\n          default: 1000\n        },\n        commandOnlyTimer: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['timerRemainingSec', 'timerPaused'],\n      commands: []\n    },\n    \"action.devices.traits.TemperatureControl\": {\n      name: 'Temperature control',\n      attributes: {\n        temperatureStepCelsius: {\n          type: \"int\",\n          default: 5\n        },\n        temperatureUnitForUX: {\n          type: \"string\",\n          default: \"C\"\n        },\n        queryOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        commandOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        temperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 0,\n            maxThresholdCelsius: 150\n          },\n          content: {\n            minThresholdCelsius: {\n              type: \"int\"\n            },\n            maxThresholdCelsius: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      params: ['temperatureSetpointCelsius','temperatureAmbientCelsius'],\n      commands: []\n    },\n    \"action.devices.traits.FanSpeed\": {\n      name: 'Fan Speed',\n      attributes: {\n        availableFanSpeeds: {\n          type: \"strigifyedObject\",\n          default: {\n            speeds: [],\n            ordered: true\n          }\n        },\n        reversible: {\n          type: \"bool\",\n          default: true\n        },\n        commandOnlyFanSpeed: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      params: ['currentFanSpeedSetting'],\n      commands: []\n    },\n    \"action.devices.traits.ArmDisarm\": {\n      name: 'Arm or disarm',\n      attributes: {\n        availableArmLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      params: ['isArmed', 'currentArmLevel','exitAllowance'],\n      commands: [\n        {\n          command: 'cancel',\n          description: 'The arm process must be canceled'\n        },\n        {\n          command: 'arm',\n          description: 'Arm the system'\n        },\n        {\n          command: 'disarm',\n          description: 'Disarm the system'\n        }\n      ]\n    },\n    \"action.devices.traits.Fill\": {\n      name: 'Fill',\n      attributes: {\n        availableFillLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      params: ['isFilled','currentFillLevel'],\n      commands: [\n        {\n          command: 'fill',\n          description: 'Fill'\n        },\n        {\n          command: 'drain',\n          description: 'Drain'\n        }\n      ]\n    },\n    \"action.devices.traits.RunCycle\": {\n      name: 'RunCycle',\n      attributes: {},\n      params: [],\n      commands: []\n    },\n    \"action.devices.traits.StatusReport\": {\n      name: 'Status report',\n      attributes: {},\n      params: ['currentStatusReport'],\n      commands: []\n    },\n    \"action.devices.traits.HumiditySetting\": {\n      name: 'Humidity setting',\n      attributes: {\n        humiditySetpointRange: {\n          type: \"object\",\n          default: {\n            minPercent: 0,\n            maxPercent: 100\n          },\n          content: {\n            minPercent: {\n              type: \"int\"\n            },\n            maxPercent: {\n              type: \"int\"\n            }\n          }\n        },\n        commandOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['humiditySetpointPercent','humidityAmbientPercent'],\n      commands: []\n    },\n    \"action.devices.traits.Cook\": {\n      name: 'Cooking',\n      attributes: {\n        foodPresets: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        supportedCookingModes: {\n          type: \"selectToArray\",\n          default: []\n        }\n      },\n      params: ['currentCookingMode','currentFoodPreset','currentFoodQuantity','currentFoodUnit'],\n      commands: []\n    },\n    \"action.devices.traits.Modes\": {\n      name: 'Modes',\n      attributes: {\n        availableModes: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyModes: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['currentModeSettings'],\n      commands: [\n        {\n          command: 'start',\n          description: 'Start cooking'\n        },\n        {\n          command: 'stop',\n          description: 'Stop cooking'\n        }\n      ]\n    },\n    \"action.devices.traits.Locator\": {\n      name: 'Locator',\n      attributes: {\n      },\n      params: [],\n      commands: [\n        {\n          command: 'silence',\n          description: 'Stop the alarm'\n        }\n      ]\n    },\n    \"action.devices.traits.SensorState\": {\n      name: 'Sesnor - Google doesn\\'t respond',\n      attributes: {\n        sensorStatesSupported: {\n          type: 'object',\n          default: [\n            {\n              name: \"\"\n            }\n          ]\n        }\n      },\n      params: ['currentSensorStateData'],\n      commands: []\n    }\n  },\n  params: {\n    thermostatTemperatureAmbient: {\n      type: \"int\",\n      name: 'Ambient temperature',\n      commanded: false,\n      default: 21\n    },\n    thermostatTemperatureSetpoint: {\n      type: \"int\",\n      name: 'Temperature set point',\n      commanded: true,\n      default: 22\n    },\n    thermostatHumidityAmbient: {\n      type: \"int\",\n      name: 'Ambient humidity',\n      commanded: false,\n      default: 60\n    },\n    thermostatMode: {\n      type: \"list\",\n      select: [\"cool\",\"heat\",\"off\",\"on\",\"heatcool\",\"auto\",\"fan-only\",\"purifier\",\"eco\",\"dry\"],\n      name: 'Mode',\n      commanded: true,\n      default: 'off'\n    },\n    on: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Power',\n      commanded: true,\n      default: false\n    },\n    deactivate: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Deactivate',\n      commanded: true,\n      default: true\n    },\n    brightness: {\n      type: \"int\",\n      name: 'Brightness',\n      commanded: true,\n      default: 80\n    },\n    online: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Online',\n      commanded: false,\n      default: true\n    },\n    color: {\n      type: \"color\",\n      name: 'Color',\n      commanded: true,\n      default: {\n        spectrumRgb: 16711935\n      }\n    },\n    thermostatTemperatureSetpointHigh: {\n      type: \"int\",\n      name: 'Hight set point in heatcool mode',\n      commanded: true,\n      default: 22\n    },\n    thermostatTemperatureSetpointLow: {\n      type: \"int\",\n      name: 'Low set point in heatcool mode',\n      commanded: true,\n      default: 18\n    },\n    openPercent: {\n      type: \"int\",\n      name: 'Open percentage',\n      commanded: true,\n      default: 60\n    },\n    rotationPercent: {\n      type: \"int\",\n      name: 'Rotation percentage',\n      commanded: true,\n      default: 50\n    },\n    rotationDegrees: {\n      type: \"int\",\n      name: 'Ration degrees',\n      commanded: true,\n      default: 90\n    },\n    isLocked: {\n      type: \"bool\",\n      name: 'Is locked',\n      commanded: false,\n      default: false\n    },\n    isJammed: {\n      type: \"bool\",\n      name: 'Is jammed',\n      commanded: false,\n      default: false\n    },\n    isDocked: {\n      type: \"bool\",\n      name: 'Is docked',\n      commanded: false,\n      default: false\n    },\n    isRunning: {\n      type: \"bool\",\n      name: 'Is running',\n      commanded: false,\n      default: false\n    },\n    isPaused: {\n      type: \"bool\",\n      name: 'Is paused',\n      commanded: false,\n      default: false\n    },\n    activeZones: {\n      type: \"object\",\n      name: 'Active Zones',\n      commanded: true,\n      default: []\n    },\n    timerRemainingSec: {\n      type: \"int\",\n      name: 'Remaining time [seconds]',\n      commanded: true,\n      default: 0\n    },\n    timerPaused: {\n      type: \"bool\",\n      name: 'Is paused',\n      commanded: true,\n      default: false\n    },\n    temperatureSetpointCelsius: {\n      type: \"int\",\n      name: 'Set point',\n      commanded: true,\n      default: 22\n    },\n    temperatureAmbientCelsius: {\n      type: \"int\",\n      name: 'Ambient',\n      commanded: false,\n      default: 21\n    },\n    currentFanSpeedSetting: {\n      type: \"string\",\n      name: 'Fan speed setting',\n      commanded: true,\n      default: ''\n    },\n    isArmed: {\n      type: \"bool\",\n      name: 'Is armed',\n      commanded: false,\n      default: false\n    },\n    exitAllowance: {\n      type: \"int\",\n      name: 'Time to leave',\n      commanded: true,\n      default: 20\n    },\n    isFilled: {\n      type: \"bool\",\n      name: 'Is filled',\n      commanded: false,\n      default: false\n    },\n    humiditySetpointPercent: {\n      type: \"int\",\n      name: 'Humidity set point',\n      commanded: true,\n      default: 70\n    },\n    humidityAmbientPercent: {\n      type: \"int\",\n      name: 'Ambient humidity',\n      commanded: false,\n      default: 60\n    },\n    currentArmLevel: {\n      type: \"string\",\n      name: 'Current security level',\n      commanded: true,\n      default: ''\n    },\n    currentFillLevel: {\n      type: \"string\",\n      name: 'Current fill levell',\n      commanded: true,\n      default: ''\n    },\n    currentCookingMode: {\n      type: \"string\",\n      name: 'Current cooking mode',\n      commanded: true,\n      default: ''\n    },\n    currentFoodPreset: {\n      type: \"string\",\n      name: 'Current food preset',\n      commanded: true,\n      default: ''\n    },\n    currentFoodQuantity: {\n      type: \"int\",\n      name: 'Current food quantity',\n      commanded: true,\n      default: ''\n    },\n    currentFoodUnit: {\n      type: \"string\",\n      name: 'Current food unit',\n      commanded: true,\n      default: ''\n    },\n    currentToggleSettings: {\n      type: \"object\",\n      name: 'Toggles status',\n      commanded: true,\n      default: {}\n    },\n    currentModeSettings: {\n      type: \"object\",\n      name: 'Modes status',\n      commanded: true,\n      default: {}\n    },\n  }\n}\n\nexport { root, deviceReference }\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport './MenuElement.css'\n\nconst MenuElement = (props) => (\n    <div className=\"menu_element\">\n      <div>\n        <img src={ props.image } alt={ props.image } className=\"menu_element_image\"/>\n      </div>\n      <div className=\"menu_element_text_container\">\n        {\n          props.exec\n          ?\n          <span className=\"menu_element_text\" onClick={props.exec}>\n            { props.title }\n          </span>\n          :\n          <Link to={props.href} className=\"menu_element_text\">\n            <span > { props.title }</span>\n          </Link>\n        }\n      </div>\n    </div>\n);\n\nexport default MenuElement\n","import React from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\n\nimport './Modal.css'\n\nconst Modal = (props) => (\n  <Popup trigger={props.trigger} modal>\n    <div className=\"modal\">\n      <h2>{props.title}</h2>\n      <hr/>\n      {props.content}\n    </div>\n  </Popup>\n);\n\nexport default Modal\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"on\",\n      \"value\": !this.props.on\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src={ this.props.on ? '/devices/onoff_on_true.png' : '/devices/onoff_on_false.png'} onClick={ this.toggle } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Information extends React.Component {\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <Link to={\"/devices/info/\" + this.props.id + \"/\"}>\n          <img src=\"/devices/information.png\" alt={ this.props.image } style={ image }/>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Information\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Connecting extends React.Component {\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <Link to={\"/devices/connecting/\" + this.props.id + \"/\"}>\n          <img src=\"/devices/connecting.png\" alt={ this.props.image } style={ image }/>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Connecting\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Edit extends React.Component {\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <Link to={\"/devices/editor/\" + this.props.id + \"/\"}>\n          <img src=\"/devices/edit.png\" alt={ this.props.image } style={ image }/>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Edit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Light extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\" && Object.keys(this.props.status).includes(\"color\"))){\n      if (Object.keys(this.props.status.color).includes(\"spectrumRgb\"))\n        color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n      else\n        color = \"#\" + this.props.status.color.spectrumRGB.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Light\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Outlet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'blue',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Outlet\n","import React from \"react\";\n\nclass TemperatureAmbient extends React.Component {\n  render() {\n    const container = {\n      float: \"left\",\n      marginLeft: \"5px\",\n      marginTop: 2,\n    };\n\n    const title = {\n      color: \"#777\",\n    };\n\n    const temperature = {\n      fontSize: \"30px\",\n      marginLeft: \"5px\",\n      marginRight: \"5px\",\n      color: \"#777\",\n    };\n\n    return (\n      <div style={container}>\n        <span style={title}>from</span>\n        <span style={temperature}>\n          {this.props.status.thermostatTemperatureAmbient}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default TemperatureAmbient;\n","import React from \"react\";\nimport getCookieValue from \"../../../functions\";\nimport { root } from \"../../../constants\";\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.up = this.up.bind(this);\n    this.down = this.down.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  up() {\n    var temperature = this.props.status.thermostatTemperatureSetpoint + 1;\n    this.update(temperature);\n  }\n\n  down() {\n    var temperature = this.props.status.thermostatTemperatureSetpoint - 1;\n    this.update(temperature);\n  }\n\n  update(temperature) {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader(\"authorization\", \"baerer \" + getCookieValue(\"token\"));\n    http.send(\n      JSON.stringify({\n        id: this.props.id,\n        param: \"thermostatTemperatureSetpoint\",\n        value: temperature,\n      })\n    );\n  }\n\n  render() {\n    const container = {\n      float: \"left\",\n      marginLeft: \"5px\",\n    };\n\n    const title = {\n      color: \"#777\",\n    };\n\n    const image = {\n      width: \"30px\",\n    };\n\n    const temperature = {\n      fontSize: \"30px\",\n      marginLeft: \"5px\",\n      marginRight: \"5px\",\n      color: \"#777\",\n    };\n\n    return (\n      <div style={container}>\n        <span style={title}>to</span>\n        <img\n          src=\"/devices/arrow_down.png\"\n          onClick={this.down}\n          alt=\"Arrow up\"\n          style={image}\n        />\n        <span style={temperature}>\n          {this.props.status.thermostatTemperatureSetpoint}\n        </span>\n        <img\n          src=\"/devices/arrow_up.png\"\n          onClick={this.up}\n          alt=\"Arrow down\"\n          style={image}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting;\n","import React from \"react\";\nimport OnOff from \"./traits/OnOff\";\nimport TemperatureAmbient from \"./traits/TemperatureAmbient\";\nimport TemperatureSetting from \"./traits/TemperatureSetting\";\nimport Information from \"./aux/Information\";\nimport Connecting from \"./aux/Connecting\";\nimport Edit from \"./aux/Edit\";\n\nclass AcUnit extends React.Component {\n  render() {\n    const traits_container = {\n      paddingLeft: \"35px\",\n    };\n\n    var color = \"yellow\";\n    if (this.props.status.thermostatMode === \"off\") color = \"#666\";\n    else if (this.props.status.thermostatMode === \"heat\") color = \"red\";\n    else if (this.props.status.thermostatMode === \"cool\") color = \"lightblue\";\n    else if (this.props.status.thermostatMode === \"on\") color = \"yellow\";\n    else if (this.props.status.thermostatMode === \"heatcool\") color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === \"auto\") color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === \"fan-only\") color = \"blue\";\n    else if (this.props.status.thermostatMode === \"purifier\") color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === \"eco\") color = \"green\";\n    else if (this.props.status.thermostatMode === \"dry\") color = \"#753500\";\n\n    const color_strip = {\n      width: \"100%\",\n      height: \"20px\",\n      borderRadius: \"20px 20px 0px 0px\",\n      backgroundColor: color,\n      opacity: this.props.status.on ? \"1\" : \"0.4\",\n    };\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={color_strip}></div>\n          <h2 className=\"device_card_title\">{this.props.device.name.name}</h2>\n          <hr className=\"device_card_divider\" />\n          <div style={traits_container}>\n            <TemperatureAmbient\n              id={this.props.device.id}\n              status={this.props.status}\n            />\n            <TemperatureSetting\n              id={this.props.device.id}\n              status={this.props.status}\n              on={this.props.status}\n              reload={this.props.reload}\n            />\n            <OnOff\n              id={this.props.device.id}\n              on={this.props.status.on}\n              reload={this.props.reload}\n            />\n            <Information id={this.props.device.id} />\n            <Connecting id={this.props.device.id} />\n            <Edit id={this.props.device.id} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AcUnit;\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirFreshener extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirFreshener\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirPurifier extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirPurifier\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Bed extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bed\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Fan extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fan\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Fireplace extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fireplace\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Radiator extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Radiator\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Switch extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Switch\n","import React from \"react\";\nimport TemperatureAmbient from \"./traits/TemperatureAmbient\";\nimport TemperatureSetting from \"./traits/TemperatureSetting\";\nimport Information from \"./aux/Information\";\nimport Connecting from \"./aux/Connecting\";\nimport Edit from \"./aux/Edit\";\n\nclass Thermostat extends React.Component {\n  render() {\n    const traits_container = {\n      paddingLeft: \"50px\",\n    };\n\n    var color = \"yellow\";\n    if (this.props.status.thermostatMode === \"off\") color = \"#666\";\n    else if (this.props.status.thermostatMode === \"heat\") color = \"red\";\n    else if (this.props.status.thermostatMode === \"cool\") color = \"lightblue\";\n    else if (this.props.status.thermostatMode === \"on\") color = \"yellow\";\n    else if (this.props.status.thermostatMode === \"heatcool\") color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === \"auto\") color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === \"fan-only\") color = \"blue\";\n    else if (this.props.status.thermostatMode === \"purifier\") color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === \"eco\") color = \"green\";\n    else if (this.props.status.thermostatMode === \"dry\") color = \"#753500\";\n\n    const color_strip = {\n      width: \"100%\",\n      height: \"20px\",\n      borderRadius: \"20px 20px 0px 0px\",\n      backgroundColor: color,\n    };\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={color_strip}></div>\n          <h2 className=\"device_card_title\">{this.props.device.name.name}</h2>\n          <hr className=\"device_card_divider\" />\n          <div style={traits_container}>\n            <TemperatureAmbient\n              id={this.props.device.id}\n              status={this.props.status}\n            />\n            <TemperatureSetting\n              id={this.props.device.id}\n              status={this.props.status}\n              on={this.props.status}\n              reload={this.props.reload}\n            />\n            <Information id={this.props.device.id} />\n            <Connecting id={this.props.device.id} />\n            <Edit id={this.props.device.id} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Thermostat;\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirCooler extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirCooler\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Bathtub extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bathtub\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Awing extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Awing\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Blinds extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blinds\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Closet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Closet\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Curtain extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Curtain\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Door extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Door\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Drawer extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Drawer\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Garage extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Garage\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Pergola extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pergola\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Shutter extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shutter\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Valve extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Valve\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Window extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Window\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Lock extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lock\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Gate extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gate\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Heater extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Heater\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Hood extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hood\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass SecuritySystem extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecuritySystem\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Blender extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blender\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Global extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Global\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Scene extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">Scene: { this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Light from \"../devices/Light\";\nimport Outlet from \"../devices/Outlet\";\nimport AcUnit from \"../devices/AcUnit\";\nimport AirFreshener from \"../devices/AirFreshener\";\nimport AirPurifier from \"../devices/AirPurifier\";\nimport Bed from \"../devices/Bed\";\nimport Fan from \"../devices/Fan\";\nimport Fireplace from \"../devices/Fireplace\";\nimport Radiator from \"../devices/Radiator\";\nimport Switch from \"../devices/Switch\";\nimport Thermostat from \"../devices/Thermostat\";\nimport AirCooler from \"../devices/AirCooler\";\nimport Bathtub from \"../devices/Bathtub\";\nimport Awing from \"../devices/Awing\";\nimport Blinds from \"../devices/Blinds\";\nimport Closet from \"../devices/Closet\";\nimport Curtain from \"../devices/Curtain\";\nimport Door from \"../devices/Door\";\nimport Drawer from \"../devices/Drawer\";\nimport Garage from \"../devices/Garage\";\nimport Pergola from \"../devices/Pergola\";\nimport Shutter from \"../devices/Shutter\";\nimport Valve from \"../devices/Valve\";\nimport Window from \"../devices/Window\";\nimport Lock from \"../devices/Lock\";\nimport Gate from \"../devices/Gate\";\nimport Heater from \"../devices/Heater\";\nimport Hood from \"../devices/Hood\";\nimport SecuritySystem from \"../devices/SecuritySystem\";\nimport Blender from \"../devices/Blender\";\nimport Global from \"../devices/Global\";\nimport Scene from \"../devices/Scene\";\nimport getCookieValue from \"../../functions\";\nimport { root } from \"../../constants\";\n\nimport \"./Devices.css\";\n\nclass Devices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      devices: [],\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n    setInterval(this.loadData, 3000);\n  }\n\n  loadData() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n            data: data,\n            devices: data.devices,\n          });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader(\"authorization\", \"baerer \" + getCookieValue(\"token\"));\n    http.send();\n  }\n\n  render() {\n    const devices = this.state.devices.map((device) => {\n      if (device.type === \"action.devices.types.LIGHT\")\n        return (\n          <Light\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.OUTLET\")\n        return (\n          <Outlet\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.AC_UNIT\")\n        return (\n          <AcUnit\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.AIRFRESHENER\")\n        return (\n          <AirFreshener\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.AIRPURIFIER\")\n        return (\n          <AirPurifier\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.BED\")\n        return (\n          <Bed\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.FAN\")\n        return (\n          <Fan\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.FIREPLACE\")\n        return (\n          <Fireplace\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.RADIATOR\")\n        return (\n          <Radiator\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.SWITCH\")\n        return (\n          <Switch\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.THERMOSTAT\")\n        return (\n          <Thermostat\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.AIRCOOLER\")\n        return (\n          <AirCooler\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.BATHTUB\")\n        return (\n          <Bathtub\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.AWING\")\n        return (\n          <Awing\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.AIRCOOLER\")\n        return (\n          <AirCooler\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.BLINDS\")\n        return (\n          <Blinds\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.CLOSET\")\n        return (\n          <Closet\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.CURTAIN\")\n        return (\n          <Curtain\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.DOOR\")\n        return (\n          <Door\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.DRAWER\")\n        return (\n          <Drawer\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.GARAGE\")\n        return (\n          <Garage\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.GATE\")\n        return (\n          <Gate\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.PERGOLA\")\n        return (\n          <Pergola\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.SHUTTER\")\n        return (\n          <Shutter\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.VALVE\")\n        return (\n          <Valve\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.WINDOW\")\n        return (\n          <Window\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.LOCK\")\n        return (\n          <Lock\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.HEATER\")\n        return (\n          <Heater\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.HOOD\")\n        return (\n          <Hood\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.SECURITYSYSTEM\")\n        return (\n          <SecuritySystem\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.BLENDER\")\n        return (\n          <Blender\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else if (device.type === \"action.devices.types.SCENE\")\n        return (\n          <Scene\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n      else\n        return (\n          <Global\n            key={device.id}\n            device={device}\n            status={this.state.data.status[device.id]}\n            reload={this.loadData}\n          />\n        );\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Devices and scences</h2>\n        </div>\n\n        <div className=\"page_cards_container\">{devices}</div>\n\n        <div className=\"page_buttons_containter\">\n          <Link to=\"/devices/editor/\">\n            <button type=\"button\">New</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Devices;\n","import React from 'react';\n\nimport '../pages/Editor.css';\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n\n  update(event){\n    this.props.update(this.props.data,event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"two_table_row\">\n        <div className=\"two_table_cel\">\n          {this.props.name}\n        </div>\n        <div className=\"two_table_cel\">\n          <input type=\"text\" className=\"two_input\" id={this.props.data} defaultValue={this.props.value} onChange={this.update}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Text\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>sceneReversible</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"sceneReversible\")}} checked={this.props.attributes.sceneReversible} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the scene can be desabled.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyOnOff</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyOnOff\")}} checked={this.props.attributes.commandOnlyOnOff} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyOnOff</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyOnOff\")}} checked={this.props.attributes.queryOnlyOnOff} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Brightness extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyBrightness</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyBrightness\")}} checked={this.props.commandOnlyBrightness} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the brightness.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Brightness\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass FanSpeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateFanSpeeds = this.updateFanSpeeds.bind(this);\n    this.addFanSpeed = this.addFanSpeed.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updateFanSpeeds(event){\n    const id = event.target.id.split('_')\n    const speed_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const speed_attribute = id[0] === 'lang' ? id[0] : 'speed_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds[speed_id].speed_values[0][speed_attribute] = value\n    if (id[0] === 'names') temp_availableFanSpeeds.speeds[speed_id].speed_name = value[0]\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  addFanSpeed(){\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds.push({\n      \"speed_name\": \"\",\n      \"speed_values\": [\n        {\n          \"speed_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const speeds = this.props.attributes.availableFanSpeeds.speeds.map((speed, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={speed.speed_values[0].lang} onChange={this.updateFanSpeeds}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Speed name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={speed.speed_values[0].speed_synonym} placeholder=\"Speed name\" onChange={this.updateFanSpeeds}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>reversible</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"reversible\")}} checked={this.props.attributes.reversible} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the fan supports blowing in both directions.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsFanSpeedPercent</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsFanSpeedPercent\")}} checked={this.props.attributes.supportsFanSpeedPercent} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the speed can be controlled with a number from 0 to 100.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyFanSpeed</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyFanSpeed\")}} checked={this.props.attributes.commandOnlyFanSpeed} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the fan speed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a speed\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addFanSpeed }>Add</button>\n          </div>\n        </div>\n\n        {speeds}\n\n      </div>\n    );\n  }\n}\n\nexport default FanSpeed\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass ColorSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>Color type</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"colorModel\" className=\"table_input\" value={this.props.attributes.colorModel} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"rgb\">RGB light</option>\n              <option value=\"hsv\">HSV light</option>\n              <option value=\"\">Color temperature</option>\n            </select>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"colorTemperatureRange/temperatureMinK\" defaultValue={ this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMinK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"colorTemperatureRange/temperatureMaxK\" defaultValue={this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMaxK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyColorSetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyColorSetting\")}} checked={this.props.attributes.commandOnlyColorSetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the color.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default ColorSetting\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes.split(',')\n\n    if (event.target.value === 'delete'){\n      temp_availableThermostatModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_availableThermostatModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes.join(','));\n  }\n\n  addMode(){\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes\n    temp_availableThermostatModes += \",\"\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n\n  render() {\n\n    const modes = this.props.attributes.availableThermostatModes.split(',').map((mode, i) => {\n\n      return (\n          <div key={i}>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n              </div>\n              <div className=\"two_table_cel\">\n                <label>\n                  <span>Mode: </span>\n                  <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                    <option value=\"select\">Select a mode</option>\n                    <option value=\"delete\">Delete this mode</option>\n                    <option value=\"off\">Off</option>\n                    <option value=\"heat\">Heat</option>\n                    <option value=\"cool\">Cool</option>\n                    <option value=\"on\">On</option>\n                    <option value=\"heatcool\">Heatcool</option>\n                    <option value=\"auto\">Auto</option>\n                    <option value=\"fan-only\">Fan only</option>\n                    <option value=\"purifier\">Purifier</option>\n                    <option value=\"eco\">Eco</option>\n                    <option value=\"dry\">Dry</option>\n                  </select>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a thermostat mode\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyTemperatureSetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyTemperatureSetting\")}} checked={this.props.attributes.commandOnlyTemperatureSetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyTemperatureSetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyTemperatureSetting\")}} checked={this.props.attributes.queryOnlyTemperatureSetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"thermostatTemperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"thermostatTemperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Range\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"bufferRangeCelsius\" defaultValue={this.props.attributes.bufferRangeCelsius} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the minimum offset between heat-cool setpoints in Celsius.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Units\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"thermostatTemperatureUnit\" className=\"table_input\" value={this.props.attributes.thermostatTemperatureUnit} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Toggles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updatetoggle = this.updatetoggle.bind(this);\n    this.addToggle = this.addToggle.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updatetoggle(event){\n    const id = event.target.id.split('_')\n    const toggle_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const toggle_attribute = id[0] === 'lang' ? id[0] : 'name_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles[toggle_id].name_values[0][toggle_attribute] = value\n    if (id[0] === 'names') temp_availableToggles[toggle_id].name = value[0]\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  addToggle(){\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const toggles = this.props.attributes.availableToggles.map((toggle, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={toggle.name_values[0].lang} placeholder=\"Name for the toggle\" onChange={this.updatetoggle}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={toggle.name_values[0].name_synonym} placeholder=\"Name\" onChange={this.updatetoggle}/>\n                    </label>\n\n\n                  </div>\n                </div>\n              </div>\n            )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyToggles</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyToggles\")}} checked={this.props.attributes.commandOnlyToggles} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the states.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a toggle\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addToggle }>Add</button>\n          </div>\n        </div>\n\n        {toggles}\n\n      </div>\n    );\n  }\n}\n\nexport default Toggles\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Modes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableModes = this.props.attributes.availableModes\n\n    if(id[0] === 'lang'){\n      temp_availableModes[mode_id].name_values[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_availableModes[mode_id].name_values[0].name_synonym = event.target.value.split(',');\n      temp_availableModes[mode_id].name = event.target.value.split(',')[0]\n    } else if (id[0] === 'settings'){\n      var values = event.target.value.split(',')\n      var settings = []\n      for ( var i = 0; i < values.length; i ++){\n        settings.push({\n          setting_name: values[i],\n            setting_values: [{\n              setting_synonym: [values[i]],\n              lang: this.props.attributes.availableModes[mode_id].name_values[0].lang\n             }]\n        })\n      }\n      temp_availableModes[mode_id].settings = settings\n    }\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  addMode(){\n    var temp_availableModes = this.props.attributes.availableModes\n    temp_availableModes.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ],\n      \"settings\": [\n        {\n          \"setting_name\": \"\",\n            \"setting_values\": [{\n              \"setting_synonym\": [\"\"],\n              \"lang\": \"en\"\n             }]\n        }\n      ]\n    });\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const settings_box = {\n      width: '230px'\n    }\n\n\n    const modes = this.props.attributes.availableModes.map((mode, i) => {\n      const settings = mode.settings.map((setting,i) => {return setting.setting_name});\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={mode.name_values[0].lang} onChange={this.updateMode}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Mode name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={mode.name_values[0].name_synonym} placeholder=\"Mode name\" onChange={this.updateMode}/>\n                    </label>\n                    <label>\n                      <span>Mode settings: </span>\n                      <input type=\"text\" id={\"settings_\" + i} style={settings_box} defaultValue={settings} placeholder=\"Separated by commas\" onChange={this.updateMode}/>\n                    </label>\n                  </div>\n                </div>\n\n\n              </div>\n\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyModes</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyModes\")}} checked={this.props.attributes.commandOnlyModes} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the modes.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a mode\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n      </div>\n    );\n  }\n}\n\nexport default Modes\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass HumiditySetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum humidity\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"humiditySetpointRange/minPercent\" defaultValue={ this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.minPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum humidity\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"humiditySetpointRange/maxPercent\" defaultValue={this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.maxPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyHumiditySetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyHumiditySetting\")}} checked={this.props.attributes.commandOnlyHumiditySetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the humidity.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyHumiditySetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyHumiditySetting\")}} checked={this.props.attributes.queryOnlyHumiditySetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device humidity.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HumiditySetting\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass OpenClose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>discreteOnlyOpenClose</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"discreteOnlyOpenClose\")}} checked={this.props.attributes.discreteOnlyOpenClose} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device must either be fully open or fully closed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyOpenClose</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyOpenClose\")}} checked={this.props.attributes.commandOnlyOpenClose} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyOpenClose</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyOpenClose\")}} checked={this.props.attributes.queryOnlyOpenClose} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default OpenClose\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Rotation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum rotation\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMin\" defaultValue={ this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMin : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum rotation\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMax\" defaultValue={this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMax : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyRotation</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyRotation\")}} checked={this.props.attributes.commandOnlyRotation} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsContinuousRotation</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsContinuousRotation\")}} checked={this.props.attributes.supportsContinuousRotation} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device supports continuous rotation.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsDegrees</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsDegrees\")}} checked={this.props.attributes.supportsDegrees} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device allows rotation by degree.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsPercent</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsPercent\")}} checked={this.props.attributes.supportsPercent} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if device allows rotation by percent.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Rotation\n","import React from 'react';\n\nclass Fill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateLevels = this.updateLevels.bind(this);\n    this.addLevel = this.addLevel.bind(this);\n  }\n\n  updateLevels(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableFillLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  addLevel(){\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableFillLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateLevels}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Fill level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Fill level name\" onChange={this.updateLevels}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a level\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default Fill\n","import React from 'react';\n\nclass ArmDisarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateSecurityLevel = this.updateSecurityLevel.bind(this);\n    this.addSecurityLevel = this.addSecurityLevel.bind(this);\n  }\n\n  updateSecurityLevel(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableArmLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  addSecurityLevel(){\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableArmLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateSecurityLevel}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Security level name\" onChange={this.updateSecurityLevel}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a security level\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addSecurityLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default ArmDisarm\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass StartStop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateArray = this.updateArray.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updateArray(event){\n    this.props.update('attributes/' + event.target.id,event.target.value.split(','));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>pausable</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"pausable\")}} checked={this.props.attributes.pausable} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device can be paused.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel align_right\">\n            Zones\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" id=\"availableThermostatModes\" defaultValue={this.props.attributes.availableZones} onChange={this.updateArray} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Supported zones names separeted by commas.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default StartStop\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyTimer</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyTimer\")}} checked={this.props.attributes.commandOnlyTimer} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel align_right\">\n            Max time\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" id=\"maxTimerLimitSec\" defaultValue={this.props.attributes.maxTimerLimitSec} onChange={this.update} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Indicates the longest timer setting in seconds available on the device.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass TemperatureControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyTemperatureControl</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyTemperatureControl\")}} checked={this.props.attributes.commandOnlyTemperatureControl} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyTemperatureControl</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyTemperatureControl\")}} checked={this.props.attributes.queryOnlyTemperatureControl} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"temperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"temperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Step\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"temperatureStepCelsius\" defaultValue={this.props.attributes.temperatureStepCelsius} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the relative temperature step.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Units\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"temperatureUnitForUX\" className=\"table_input\" value={this.props.attributes.temperatureUnitForUX} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureControl\n","import React from 'react';\n\nclass Cook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updatePreset = this.updatePreset.bind(this);\n    this.addPreset = this.addPreset.bind(this);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n\n    if (event.target.value === 'delete'){\n      temp_supportedCookingModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_supportedCookingModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  addMode(){\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n    temp_supportedCookingModes.push(\"\");\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  updatePreset(event){\n    const id = event.target.id.split('_')\n    const preset_id = id[1]\n    var temp_foodPresets = this.props.attributes.foodPresets\n\n    if(id[0] === 'lang'){\n      temp_foodPresets[preset_id].food_synonyms[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_foodPresets[preset_id].food_synonyms[0].synonym = event.target.value.split(',');\n      temp_foodPresets[preset_id].food_preset_name = event.target.value.split(',')[0]\n    } else if (id[0] === 'units'){\n      temp_foodPresets[preset_id].supported_units[0] = event.target.value;\n    }\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  addPreset(){\n    var temp_foodPresets = this.props.attributes.foodPresets\n    temp_foodPresets.push({\n      \"food_preset_name\": \"\",\n      \"supported_units\": [\"\"],\n      \"food_synonyms\": [{\n        \"synonym\": [\"\"],\n        \"language\": \"en\"\n      }]\n    });\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const modes = this.props.attributes.supportedCookingModes.map((mode, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Mode: </span>\n                      <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                        <option value=\"select\">Select a mode</option>\n                        <option value=\"delete\">Delete this mode</option>\n                        <option value=\"UNKNOWN_COOKING_MODE\">UNKNOWN_COOKING_MODE</option>\n                        <option value=\"BAKE\">BAKE</option>\n                        <option value=\"BEAT\">BEAT</option>\n                        <option value=\"BLEND\">BLEND</option>\n                        <option value=\"BOIL\">BOIL</option>\n                        <option value=\"BREW\">BREW</option>\n                        <option value=\"BROIL\">BROIL</option>\n                        <option value=\"CONVECTION_BAKE\">CONVECTION_BAKE</option>\n                        <option value=\"COOK\">COOK</option>\n                        <option value=\"DEFROST\">DEFROST</option>\n                        <option value=\"DEHYDRATE\">DEHYDRATE</option>\n                        <option value=\"FERMENT\">FERMENT</option>\n                        <option value=\"FRY\">FRY</option>\n                        <option value=\"KNEAD\">KNEAD</option>\n                        <option value=\"MICROWAVE\">MICROWAVE</option>\n                        <option value=\"PRESSURE_COOK\">PRESSURE_COOK</option>\n                        <option value=\"PUREE\">PUREE</option>\n                        <option value=\"ROAST\">ROAST</option>\n                        <option value=\"SAUTE\">SAUTE</option>\n                        <option value=\"SLOW_COOK\">SLOW_COOK</option>\n                        <option value=\"SOUS_VIDE\">SOUS_VIDE</option>\n                        <option value=\"STEAM\">STEAM</option>\n                        <option value=\"STEW\">STEW</option>\n                        <option value=\"WARM\">WARM</option>\n                        <option value=\"WHIP\">WHIP</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              )\n    });\n\n    const presets = this.props.attributes.foodPresets.map((preset, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Language: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={preset.food_synonyms[0].lang} onChange={this.updatePreset}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label style={names_box}>\n                      <span>Preset name: </span>\n                      <input type=\"text\" id={\"names_\" + i} defaultValue={preset.food_synonyms[0].synonym} placeholder=\"Preset name\" onChange={this.updatePreset}/>\n                    </label>\n                    <label>\n                      <span>Units: </span>\n                      <select name=\"type\" id={\"units_\" + i} value={preset.supported_units[0]} onChange={this.updatePreset}>\n                        <option value=\"NO_UNITS\">No units</option>\n                        <option value=\"UNKNOWN_UNITS\">Unkown</option>\n                        <option value=\"CENTIMETERS\">Centimeters</option>\n                        <option value=\"CUPS\">Cups</option>\n                        <option value=\"DECILITERS\">Deciliters</option>\n                        <option value=\"FEET\">Feet</option>\n                        <option value=\"FLUID_OUNCES\">Fluid ounces</option>\n                        <option value=\"GALLONS\">Gallons</option>\n                        <option value=\"GRAMS\">Grams</option>\n                        <option value=\"INCHES\">Inches</option>\n                        <option value=\"KILOGRAMS\">Kilograms</option>\n                        <option value=\"LITERS\">Liters</option>\n                        <option value=\"METERS\">Meters</option>\n                        <option value=\"MILLIGRAMS\">Miligrams</option>\n                        <option value=\"MILLILITERS\">Mililiters</option>\n                        <option value=\"MILLIMETERS\">Milimeters</option>\n                        <option value=\"OUNCES\">Ounces</option>\n                        <option value=\"PINCH\">Pinch</option>\n                        <option value=\"PINTS\">Pints</option>\n                        <option value=\"PORTION\">Portion</option>\n                        <option value=\"POUNDS\">Pounds</option>\n                        <option value=\"QUARTS\">Quarts</option>\n                        <option value=\"TABLESPOONS\">Tablespoons</option>\n                        <option value=\"TEASPOONS\">Teaspoons</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a cooking mode\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a preset\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addPreset }>Add</button>\n          </div>\n        </div>\n\n        {presets}\n\n      </div>\n    );\n  }\n}\n\nexport default Cook\n","import React from 'react';\n\nclass SensorState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n  update(event){\n    const value = event.target.value;\n    var sensor = {\n      name: value\n    }\n\n    switch (value) {\n      default:\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['fair','good','healthy','moderate','poor','severe','unhealthy','unhealthy for sensitive groups','very poor','very unhealthy','unknown'],\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"AQI\" }\n        break;\n      case 'AirQuality':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['fair','good','healthy','moderate','poor','severe','unhealthy','unhealthy for sensitive groups','very poor','very unhealthy','unknown'],\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"AQI\" }\n        break;\n      case 'CarbonDioxideLevel':\n        sensor['descriptiveCapabilities'] = {\n          numericCapabilities: { rawValueUnit: \"PARTS_PER_MILLION\" }\n        }\n        break;\n      case 'CarbonMonoxideLevel':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['carbon monoxide detected','high','no carbon monoxide detected','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n      case 'FilterCleanliness':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['clean','dirty','needs replacement','unknown']\n        }\n        break;\n      case 'FilterLifeTime':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['good','new','replace soon','replace now','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'HEPAFilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'Max2FilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'PM2.5':\n        sensor['numericCapabilities']= { rawValueUnit: \"MICROGRAMS_PER_CUBIC_METER\" }\n        break;\n      case 'PM10':\n        sensor['numericCapabilities']= { rawValueUnit: \"MICROGRAMS_PER_CUBIC_METER\" }\n        break;\n      case 'PreFilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'SmokeLevel':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['smoke detected','high','no smoke detected','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n      case 'WaterLeak':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['leak','no leak','unknown']\n        }\n        break;\n      case 'RainDetection':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['rain detected','no rain detected','unknown']\n        }\n        break;\n      case 'VolatileOrganicCompounds':\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n    }\n\n    var sensorStatesSupported = []\n    sensorStatesSupported.push(sensor);\n    this.props.update('attributes/' + event.target.id,sensorStatesSupported);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Sensor type\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"sensorStatesSupported\" className=\"table_input\" value={this.props.attributes.sensorStatesSupported[0].name} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"AirQuality\">Air Quality</option>\n              <option value=\"CarbonDioxideLevel\">Carbon Dioxide Level</option>\n              <option value=\"CarbonMonoxideLevel\">Carbon Monoxide Level</option>\n              <option value=\"FilterCleanliness\">Filter Clean liness</option>\n              <option value=\"FilterLifeTime\">Filter Life Time</option>\n              <option value=\"HEPAFilterLifeTime\">HEPA Filter Life Time</option>\n              <option value=\"Max2FilterLifeTime\">Max2 Filter Life Time</option>\n              <option value=\"PM2.5\">PM2.5</option>\n              <option value=\"PM10\">PM10</option>\n              <option value=\"PreFilterLifeTime\">PreFilter Life Time</option>\n              <option value=\"SmokeLevel\">Smoke Level</option>\n              <option value=\"WaterLeak\">Water Leak</option>\n              <option value=\"RainDetection\">Rain Detection</option>\n              <option value=\"VolatileOrganicCompounds\">Volatile Organic Compounds</option>\n            </select>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default SensorState\n","import React from \"react\";\nimport Switch from \"react-switch\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport Text from \"../editor/Text\";\nimport Scene from \"../editor/traits/Scene\";\nimport OnOff from \"../editor/traits/OnOff\";\nimport Brightness from \"../editor/traits/Brightness\";\nimport FanSpeed from \"../editor/traits/FanSpeed\";\nimport ColorSetting from \"../editor/traits/ColorSetting\";\nimport TemperatureSetting from \"../editor/traits/TemperatureSetting\";\nimport Toggles from \"../editor/traits/Toggles\";\nimport Modes from \"../editor/traits/Modes\";\nimport HumiditySetting from \"../editor/traits/HumiditySetting\";\nimport OpenClose from \"../editor/traits/OpenClose\";\nimport Rotation from \"../editor/traits/Rotation\";\nimport Fill from \"../editor/traits/Fill\";\nimport ArmDisarm from \"../editor/traits/ArmDisarm\";\nimport StartStop from \"../editor/traits/StartStop\";\nimport Timer from \"../editor/traits/Timer\";\nimport TemperatureControl from \"../editor/traits/TemperatureControl\";\nimport Cook from \"../editor/traits/Cook\";\nimport SensorState from \"../editor/traits/SensorState\";\nimport getCookieValue from \"../../functions\";\nimport { root, deviceReference } from \"../../constants\";\n\nimport \"./Editor.css\";\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split(\"/\")[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultNames: [],\n          nicknames: [],\n          name: \"\",\n        },\n        traits: [],\n        type: \"\",\n      },\n      status: {\n        online: true,\n      },\n      device_tratis: [],\n      not_recomended_traits: false,\n    };\n    this.updateNames = this.updateNames.bind(this);\n    this.update = this.update.bind(this);\n    this.updateId = this.updateId.bind(this);\n    this.updateType = this.updateType.bind(this);\n    this.updateTraits = this.updateTraits.bind(this);\n    this.notRecomendedTraits = this.notRecomendedTraits.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.renderAttrinutes = this.renderAttrinutes.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            var recomended_tratis = deviceReference.devices[data.type].traits;\n            var device_tratis = data.traits.concat(recomended_tratis);\n            device_tratis = device_tratis.filter((trait, index) => {\n              return device_tratis.indexOf(trait) === index;\n            });\n            this.setState({\n              device: data,\n              device_tratis: device_tratis,\n            });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n      http.setRequestHeader(\n        \"authorization\",\n        \"baerer \" + getCookieValue(\"token\")\n      );\n      http.send();\n\n      var sta = new XMLHttpRequest();\n      sta.onload = function (e) {\n        if (sta.readyState === 4) {\n          if (sta.status === 200) {\n            var data = JSON.parse(sta.responseText);\n            console.log(\"in\");\n            this.setState({\n              status: data,\n            });\n          } else {\n            console.error(sta.statusText);\n          }\n        }\n      }.bind(this);\n      sta.open(\"GET\", root + \"api/status/get/\" + this.state.id + \"/\");\n      sta.setRequestHeader(\n        \"authorization\",\n        \"baerer \" + getCookieValue(\"token\")\n      );\n      sta.send();\n    }\n  }\n\n  updateNames(dumy_key, value) {\n    var names = value.split(\",\");\n    var temp_device = this.state.device;\n    temp_device.name = {\n      defaultNames: names,\n      nicknames: names,\n      name: names[0],\n    };\n    this.setState({\n      device: temp_device,\n    });\n  }\n\n  update(key, value) {\n    var temp_device = this.state.device;\n    var keys = key.split(\"/\");\n    if (keys.length === 1) temp_device[key] = value;\n    else if (keys.length === 2) temp_device[keys[0]][keys[1]] = value;\n    else if (keys.length === 3) temp_device[keys[0]][keys[1]][keys[2]] = value;\n    this.setState({\n      device: temp_device,\n    });\n  }\n\n  updateId(event) {\n    this.update(\"id\", event.target.value);\n  }\n\n  updateType(event) {\n    this.update(\"type\", event.target.value);\n    this.setState({\n      device_tratis: deviceReference.devices[event.target.value].traits,\n    });\n  }\n\n  updateTraits(checked, trait) {\n    var temp_device = this.state.device;\n    var temp_status = this.state.status;\n    if (checked) {\n      if (this.state.device.traits.includes(trait) === false) {\n        //Push the trait to the device\n        temp_device.traits.push(trait);\n        //Set the default attributes values\n        var attributes = deviceReference.traits[trait].attributes;\n        Object.keys(attributes).forEach((attribute, i) => {\n          temp_device.attributes[attribute] = attributes[attribute].default;\n        });\n        //Set the default status params\n        var params = deviceReference.traits[trait].params;\n        params.forEach((param, i) => {\n          temp_status[param] = deviceReference.params[param].default;\n        });\n      }\n    } else {\n      //Delete the trait from the list\n      if (this.state.device.traits.includes(trait) === true) {\n        temp_device.traits = temp_device.traits.filter(function (\n          value,\n          index,\n          arr\n        ) {\n          return value !== trait;\n        });\n      }\n      //Delete the attributes values\n      attributes = deviceReference.traits[trait].attributes;\n      Object.keys(attributes).forEach((attribute, i) => {\n        if (Object.keys(temp_device.attributes).includes(attribute))\n          delete temp_device.attributes[attribute];\n      });\n      //Delete the status params\n      params = deviceReference.traits[trait].params;\n      params.forEach((param, i) => {\n        if (Object.keys(temp_status).includes(param)) delete temp_status[param];\n      });\n    }\n    this.setState({\n      device: temp_device,\n      status: temp_status,\n    });\n  }\n\n  notRecomendedTraits() {\n    this.setState({\n      device_tratis: Object.keys(deviceReference.traits),\n      not_recomended_traits: true,\n    });\n  }\n\n  save() {\n    ToastsStore.info(\"Saving\");\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          ToastsStore.success(\"Saved correctly\");\n          if (this.state.create) {\n            window.location.href = \"/devices\";\n          }\n        } else {\n          console.error(http.statusText);\n          ToastsStore.error(\"Error, the changes haven't been saved\");\n        }\n      }\n    }.bind(this);\n    var payload = {\n      device: this.state.device,\n      status: this.state.status,\n    };\n    if (this.state.create) {\n      http.open(\"POST\", root + \"api/devices/create/\");\n    } else {\n      http.open(\"POST\", root + \"api/devices/update/\");\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader(\"authorization\", \"baerer \" + getCookieValue(\"token\"));\n    http.send(JSON.stringify(payload));\n  }\n\n  delete() {\n    ToastsStore.info(\"Deleting\");\n    if (window.confirm(\"Do you want to delete the device?\")) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/devices/\";\n          } else {\n            console.error(http.statusText);\n            ToastsStore.error(\"Error, the device hasn't been deleted\");\n          }\n        } else {\n          ToastsStore.error(\"Error, the device hasn't been deleted\");\n        }\n      };\n      http.open(\n        \"GET\",\n        root + \"api/devices/delete/\" + this.state.device.id + \"/\"\n      );\n      http.setRequestHeader(\n        \"authorization\",\n        \"baerer \" + getCookieValue(\"token\")\n      );\n      http.send();\n    } else {\n      ToastsStore.warning(\"Ok. The device is save\");\n    }\n  }\n\n  renderAttrinutes(trait) {\n    if (this.state.device.traits.includes(trait)) {\n      if (trait === \"action.devices.traits.Scene\")\n        return (\n          <Scene\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.OnOff\")\n        return (\n          <OnOff\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.Brightness\")\n        return (\n          <Brightness\n            commandOnlyBrightness={\n              this.state.device.attributes.commandOnlyBrightness\n            }\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.ColorSetting\")\n        return (\n          <ColorSetting\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.FanSpeed\")\n        return (\n          <FanSpeed\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.TemperatureSetting\")\n        return (\n          <TemperatureSetting\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.Toggles\")\n        return (\n          <Toggles\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.Modes\")\n        return (\n          <Modes\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.HumiditySetting\")\n        return (\n          <HumiditySetting\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.OpenClose\")\n        return (\n          <OpenClose\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.Rotation\")\n        return (\n          <Rotation\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.Fill\")\n        return (\n          <Fill\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.ArmDisarm\")\n        return (\n          <ArmDisarm\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.StartStop\")\n        return (\n          <StartStop\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.Timer\")\n        return (\n          <Timer\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.TemperatureControl\")\n        return (\n          <TemperatureControl\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.Cook\")\n        return (\n          <Cook\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n      else if (trait === \"action.devices.traits.SensorState\")\n        return (\n          <SensorState\n            attributes={this.state.device.attributes}\n            update={this.update}\n          />\n        );\n    }\n  }\n\n  render() {\n    const deleteButton = {\n      backgroundColor: \"red\",\n    };\n\n    const deleteButtonDisabled = {\n      backgroundColor: \"red\",\n      opacity: \"0.2\",\n    };\n\n    const types = Object.keys(deviceReference.devices).map((type) => {\n      return (\n        <option key={type} value={type}>\n          {deviceReference.devices[type].name}\n        </option>\n      );\n    });\n\n    const nicknames = this.state.device.name.nicknames.map((name) => {\n      return name;\n    });\n\n    const traits = this.state.device_tratis.map((trait) => (\n      <div key={trait}>\n        <hr className=\"separator\" />\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            <b>{deviceReference.traits[trait].name}</b>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch\n              onChange={(checked) => {\n                this.updateTraits(checked, trait);\n              }}\n              checked={this.state.device.traits.includes(trait)}\n            />\n          </div>\n          <div className=\"three_table_cel\">\n            Read Google's{\" \"}\n            <a\n              href={\n                \"https://developers.google.com/assistant/smarthome/traits/\" +\n                trait.split(\".\")[3].toLowerCase()\n              }\n              target=\"blanck\"\n            >\n              documentation\n            </a>\n          </div>\n        </div>\n        {this.renderAttrinutes(trait)}\n      </div>\n    ));\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Global settings</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr />\n          </div>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Device ID*</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  id=\"id\"\n                  defaultValue={this.state.device.id}\n                  onChange={this.updateId}\n                  disabled={this.state.create ? false : true}\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Device Type*</div>\n              <div className=\"two_table_cel\">\n                <select\n                  name=\"type\"\n                  className=\"two_input\"\n                  id=\"type\"\n                  value={this.state.device.type}\n                  onChange={this.updateType}\n                  disabled={this.state.create ? false : true}\n                >\n                  <option value=\"default\">Select a device</option>\n                  {types}\n                </select>\n              </div>\n            </div>\n            <Text\n              name=\"Nick names*\"\n              data=\"nicknames\"\n              value={nicknames}\n              update={this.updateNames}\n            />\n            <Text\n              name=\"Hardware version\"\n              data=\"deviceInfo/hwVersion\"\n              value={\n                this.state.device.deviceInfo\n                  ? this.state.device.deviceInfo.hwVersion\n                  : \"\"\n              }\n              update={this.update}\n            />\n            <Text\n              name=\"Software version\"\n              data=\"deviceInfo/swVersion\"\n              value={\n                this.state.device.deviceInfo\n                  ? this.state.device.deviceInfo.swVersion\n                  : \"\"\n              }\n              update={this.update}\n            />\n            <Text\n              name=\"Manufacturer\"\n              data=\"deviceInfo/manufacturer\"\n              value={\n                this.state.device.deviceInfo\n                  ? this.state.device.deviceInfo.manufacturer\n                  : \"\"\n              }\n              update={this.update}\n            />\n            <Text\n              name=\"Model\"\n              data=\"deviceInfo/model\"\n              value={\n                this.state.device.deviceInfo\n                  ? this.state.device.deviceInfo.model\n                  : \"\"\n              }\n              update={this.update}\n            />\n            <div className=\"advise\">\n              <span>\n                Nick names must be separeted by <i>,</i> commas.\n              </span>\n              <br />\n              <span>* data is required.</span>\n            </div>\n            <hr />\n            <h2>Traits</h2>\n            <div className=\"advise\">\n              <span>The traits define what the device can do.</span>\n            </div>\n            {traits}\n            {this.state.not_recomended_traits ? (\n              \"\"\n            ) : (\n              <button type=\"button\" onClick={this.notRecomendedTraits}>\n                More traits\n              </button>\n            )}\n            <hr />\n            <div className=\"two_table_cel\">\n              <button\n                type=\"button\"\n                style={this.state.create ? deleteButtonDisabled : deleteButton}\n                onClick={this.delete}\n                disabled={this.state.create ? true : false}\n              >\n                Delete\n              </button>\n              <button type=\"button\" onClick={this.save}>\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <ToastsContainer store={ToastsStore} />\n      </div>\n    );\n  }\n}\n\nexport default Editor;\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Info.css'\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    this.state = {\n      id: id,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultnames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      }\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          this.setState({\n             device: data\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    var sta = new XMLHttpRequest();\n    sta.onload = function (e) {\n      if (sta.readyState === 4) {\n        if (sta.status === 200) {\n          var data = JSON.parse(sta.responseText);\n          this.setState({\n             status: data\n           });\n        } else {\n          console.error(sta.statusText);\n        }\n      }\n    }.bind(this);\n    sta.open(\"GET\", root + \"api/status/get/\" + this.state.id + \"/\");\n    sta.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    sta.send();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Device definition</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div className=\"json_viewer\">\n            <ReactJson src={this.state.device} />\n          </div>\n        </div>\n        <div className=\"page_block_container\">\n          <h2>Device status</h2>\n          <div className=\"advise\">\n            <span>Status of the device.</span>\n            <hr/>\n          </div>\n          <div className=\"json_viewer\">\n            <ReactJson src={this.state.status} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Connecting.css';\n\nclass Connecting extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3]\n    this.state = {\n      id: id,\n      traits: [],\n      params: [],\n      commands: []\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          const data = JSON.parse(dev.responseText);\n          const traits = data.traits;\n          var commands = [];\n          var params = []\n          traits.forEach((trait) => {\n            params = params.concat(deviceReference.traits[trait].params);\n            commands = commands.concat(deviceReference.traits[trait].commands);\n          });\n          this.setState({\n             traits: traits,\n             params: params,\n             commands: commands\n           });\n        } else {\n          console.error(dev.statusText)\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n  }\n\n  render() {\n\n    const params = this.state.params.map((param, i) => {\n      var type = deviceReference.params[param].type\n      if (type === 'list')\n        type = 'string'\n\n      var topic = 'None - Controlled only by the device'\n      if (deviceReference.params[param].commanded)\n        topic = 'device/' + this.state.id + '/' + param\n\n      return (\n        <div key={i} className=\"param_table_row\">\n          <div className=\"param_table_cel\">{param}</div>\n          <div className=\"param_table_cel\">{topic}</div>\n          <div className=\"param_table_cel\">{type}</div>\n        </div>\n      )\n    })\n\n    const commands = this.state.commands.map((command, i) => {\n      return (\n        <div key={i} className=\"command_table_row\">\n          <div className=\"command_table_cel\">{command.command}</div>\n          <div className=\"command_table_cel\">{'device/' + this.state.id + '/command'}</div>\n          <div className=\"command_table_cel\">{command.description}</div>\n        </div>\n      )\n    })\n\n    var example = {\"id\":\"light001\",\"param\":\"brightness\",\"value\":\"80\",\"intent\":\"execute\"}\n    var advise = {\n      textAlign: 'left'\n    }\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Params</h2>\n          <div className=\"advise\">\n            <p>Params are data interchanged between Google and the device and stored in Homeware database. </p>\n            <p>If the param has got a notification topic, Google Home can control it. A notification will be sent in this MQTT topic when Google change a param.</p>\n            <p>If the param hasn't got a notification topic, the device should update the param value when necessary.</p>\n            <hr/>\n          </div>\n          <div className=\"param_table_row param_table_header\">\n            <div className=\"param_table_cel\"><b>Param</b></div>\n            <div className=\"param_table_cel\"><b>Notifications topic</b></div>\n            <div className=\"param_table_cel\"><b>Type</b></div>\n          </div>\n          {params}\n          <div className=\"advise\" style={advise}>\n            <hr/>\n            <p>The device can change the value of any param sending an execute request to device/control topic as follow</p>\n            <ReactJson src={example}/>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Commands</h2>\n          <div className=\"advise\">\n            <p>Commands are directs orders from Google to the device. Commands are not stored in Homeware's database.</p>\n            <hr/>\n          </div>\n          <div className=\"command_table_row command_table_header\">\n            <div className=\"command_table_cel\"><b>Command</b></div>\n            <div className=\"command_table_cel\"><b>Notifications topic</b></div>\n            <div className=\"command_table_cel\"><b>Description</b></div>\n          </div>\n          {commands}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Connecting\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Tasks.css';\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      devices: [],\n      tasks: []\n    }\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             devices: data.devices,\n             tasks: data.tasks\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  render() {\n\n    const tasks = this.state.tasks.map((task, i) => {\n      return(\n        <Link key={i} to={'/tasks/manager/' + i} className=\"task_link\">\n          <div className=\"task_card\">\n            <h2 className=\"task_card_title\" id={ 'task_' + i }>{ task.title }</h2>\n            <hr className=\"task_card_divider\"/>\n            <p>{ task.description }</p>\n          </div>\n        </Link>\n      )\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Tasks</h2>\n        </div>\n\n        <div className=\"page_cards_container\">\n          {tasks}\n        </div>\n\n        <div className=\"page_buttons_containter\">\n          <Link to='/tasks/manager/'>\n            <button type=\"button\">New</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tasks\n","import React from 'react';\nimport Triggers from './Triggers'\n\nimport '../pages/Manager.css';\n\nclass TriggerAddLogic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or',this.props.id)\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and',this.props.id)\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant(this.props.id)\n  }\n\n  render() {\n\n    const num_operations = this.props.triggers[this.props.id].operation.length-1;\n    const operations = this.props.triggers[this.props.id].operation.map((op, i) => {\n      return (\n        <div key={op + i }>\n          <Triggers id={op} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic}  openTriggerAssistant={this.props.openTriggerAssistant}/>\n          {i < num_operations ? <h2 className=\"trigger_logic_title\">{this.props.triggers[this.props.id].type}</h2> : '' }\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"trigger_logic_container\">\n          {operations}\n          <div className=\"trigger_logic_buttons_container\">\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n            <button type=\"button\" className=\"trigger_logic_button red_button\" onClick={ this.delete }>Delete</button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default TriggerAddLogic\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Trigger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.renderTriggerText = this.renderTriggerText.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  renderTriggerText() {\n    const week = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n    const device_triggers = ['d2b','d2i','d2l','d2s']\n\n    const type = this.props.triggers[this.props.id].type;\n    const operation = this.props.triggers[this.props.id].operation.split(':');\n    if (device_triggers.includes(type)) {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'd2d') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  this.props.devices[operation[3]] + ' (' + (deviceReference.params[operation[4]].name ? deviceReference.params[operation[4]].name : operation[4]) + ') ';\n    } else if (type === 'd2c') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'time') {\n\n      var days = '';\n      for( var i = 0; i < operation[2].length; i++){\n        days += week[operation[2][i]];\n        if (i !== operation[2].length - 1)\n          days += ', ';\n      }\n      return operation[0] + ':'  + operation[1] + ' on ' + days\n\n    } else {\n      return this.props.triggers[this.props.id].operation\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_device_container\">\n        <span>{this.renderTriggerText()}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Trigger\n","import React from 'react';\nimport TriggerAddLogic from './TriggerAddLogic'\nimport Trigger from './Trigger'\n\nclass Triggers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or','triggers')\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and','triggers')\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant('triggers')\n  }\n\n  render() {\n\n    if (this.props.triggers.trigger) {\n      var operation = this.props.triggers[this.props.id]\n      const device_triggers = ['d2b','d2d','d2i','d2l','time','d2c']\n\n      if (operation.type === 'or'){\n        return <TriggerAddLogic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (operation.type === 'and'){\n        return <TriggerAddLogic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (device_triggers.includes(operation.type)){\n        return <Trigger id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete}/>\n      }\n    } else {\n      return (\n        <div>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default Triggers\n","import React from 'react';\n\nimport '../pages/Manager.css';\n\nclass TriggerAddTime extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  addTriggerOperation(){\n    const hour = document.getElementById('hour').value;\n    const minute = document.getElementById('minute').value;\n    var week = '';\n\n    if (document.getElementById('monday').checked)\n      week += '1'\n    if (document.getElementById('tuesday').checked)\n      week += '2'\n    if (document.getElementById('wednesday').checked)\n      week += '3'\n    if (document.getElementById('thursday').checked)\n      week += '4'\n    if (document.getElementById('friday').checked)\n      week += '5'\n    if (document.getElementById('saturday').checked)\n      week += '6'\n    if (document.getElementById('sunday').checked)\n      week += '0'\n\n    const value = hour + ':' + minute + ':' + week;\n    this.props.addTriggerOperation('time',value);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by time</h2>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Hour*\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"number\" className=\"number_input\" id=\"hour\" min=\"0\" max=\"23\"/>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Minute*\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"number\" className=\"number_input\" id=\"minute\" min=\"0\" max=\"59\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Week*\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"checkbox\" id=\"sunday\"/>Sunday\n            <input type=\"checkbox\" id=\"monday\"/>Monday\n            <input type=\"checkbox\" id=\"tuesday\"/>Tuesday\n            <input type=\"checkbox\" id=\"wednesday\"/>Wednesday\n            <input type=\"checkbox\" id=\"thursday\"/>Thursday\n            <input type=\"checkbox\" id=\"friday\"/>Friday\n            <input type=\"checkbox\" id=\"saturday\"/>Saturday\n          </div>\n        </div>\n        <span className=\"advise\">24h format</span>\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TriggerAddTime\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass TriggerAddDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTriggerOperation(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    const comparator = document.getElementById('comparator').value;\n    const value = document.getElementById('value').value;\n\n\n    const operation = device + ':' + param + ':' + comparator + ':' + value;\n    this.props.addTriggerOperation(this.typeConversion(deviceReference.params[this.state.param].type),operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by a device</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TriggerAddDevice\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass TriggerAddDeviceToDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device_a: \"\",\n      device_b: \"\"\n    }\n    this.updateDependencies = this.updateDependencies.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  updateDependencies(event) {\n    var state = this.state;\n    state[event.target.id] = event.target.value;\n    this.setState(state);\n  }\n\n\n  addTriggerOperation(){\n    const device_a = document.getElementById('device_a').value;\n    const param_a = document.getElementById('param_a').value;\n    const comparator = document.getElementById('comparator').value;\n    const device_b = document.getElementById('device_b').value;\n    const param_b = document.getElementById('param_b').value;\n\n    const operation = device_a + ':' + param_a + ':' + comparator + ':' + device_b + ':' + param_b;\n    this.props.addTriggerOperation('d2d',operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params_a = this.state.device_a === \"\" ? '' : Object.keys(this.props.status[this.state.device_a]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    const params_b = this.state.device_b === \"\" ? '' : Object.keys(this.props.status[this.state.device_b]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Compare two devices</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_a}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_b}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TriggerAddDeviceToDevice\n","import React from 'react';\nimport TriggerAddTime from './TriggerAddTime'\nimport TriggerAddDevice from './TriggerAddDevice'\nimport TriggerAddDeviceToDevice from './TriggerAddDeviceToDevice'\n\nimport '../pages/Manager.css';\n\nclass AddTrigger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: ''\n    }\n    this.timeTigger = this.timeTigger.bind(this);\n    this.deiceTrigger = this.deiceTrigger.bind(this);\n    this.deviceToDeviceTrigger = this.deviceToDeviceTrigger.bind(this);\n  }\n\n  timeTigger() {\n    this.setState({\n      type: 'time'\n    });\n  }\n\n  deiceTrigger() {\n    this.setState({\n      type: 'device'\n    });\n  }\n\n  deviceToDeviceTrigger() {\n    this.setState({\n      type: 'device2device'\n    });\n  }\n\n  render() {\n\n    if (this.state.type === '')\n      return (\n        <div className=\"trigger_assistant_container\">\n          <h2 className=\"trigger_assistant_title\">New trigger</h2>\n          <div className=\"trigger_assisstant_buttons_container\">\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.timeTigger }>Time</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deiceTrigger }>Device</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deviceToDeviceTrigger }>Device to device</button>\n            <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n          </div>\n        </div>\n      );\n    else if (this.state.type === 'time')\n      return <TriggerAddTime closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device')\n      return <TriggerAddDevice devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device2device')\n      return <TriggerAddDeviceToDevice devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n  }\n}\n\nexport default AddTrigger\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Target extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  render() {\n\n    const container = {\n        marginBottom: '10px'\n    }\n\n    return (\n      <div className=\"trigger_device_container\" style={container}>\n        <span>{ (this.props.devices[this.props.target.device] ? this.props.devices[this.props.target.device] : this.props.target.device)\n        + ' (' + (deviceReference.params[this.props.target.param] ? deviceReference.params[this.props.target.param].name : this.props.target.param)\n        + ') = ' + this.props.target.value}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Target\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass AddTarget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTarget(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    let value = document.getElementById('value').value;\n\n    if(value[0] === '#')\n      value = parseInt(value.substring(1),16)\n\n    const target = {\n      device: device,\n      param: param,\n      value: value\n    }\n    this.props.addTarget(target);\n    document.getElementById('device').value = '';\n    document.getElementById('param').value = '';\n    this.setState({\n      param: ''\n    });\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2c'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"color\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">New target</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTarget }>Add</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddTarget\n","import React from \"react\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport Triggers from \"../manager/Triggers.js\";\nimport AddTrigger from \"../manager/AddTrigger.js\";\nimport Target from \"../manager/Target.js\";\nimport AddTarget from \"../manager/AddTarget.js\";\nimport getCookieValue from \"../../functions\";\nimport { root } from \"../../constants\";\n\nimport \"./Manager.css\";\n\nclass Manager extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split(\"/\")[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      trigger_assistant_parent: 0,\n      task: {\n        title: \"\",\n        description: \"\",\n        triggers: {},\n        target: [],\n      },\n      devices: [],\n      status: {},\n    };\n    this.update = this.update.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.deleteTrigger = this.deleteTrigger.bind(this);\n    this.addTriggerLogic = this.addTriggerLogic.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.closeTriggerAssistant = this.closeTriggerAssistant.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n    this.deleteTarget = this.deleteTarget.bind(this);\n  }\n\n  componentDidMount() {\n    // Load devices data\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          var devices_names = {};\n          data.devices.forEach((device) => {\n            devices_names[device.id] = device.name.name;\n          });\n          this.setState({\n            devices: devices_names,\n            status: data.status,\n          });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/global/get/\");\n    dev.setRequestHeader(\"authorization\", \"baerer \" + getCookieValue(\"token\"));\n    dev.send();\n\n    // Load task if neeeded\n    if (!this.state.create) {\n      var tas = new XMLHttpRequest();\n      tas.onload = function (e) {\n        if (tas.readyState === 4) {\n          if (tas.status === 200) {\n            var data = JSON.parse(tas.responseText);\n            this.setState({\n              task: data,\n            });\n          } else {\n            console.error(tas.statusText);\n          }\n        }\n      }.bind(this);\n      tas.open(\"GET\", root + \"api/tasks/get/\" + this.state.id + \"/\");\n      tas.setRequestHeader(\n        \"authorization\",\n        \"baerer \" + getCookieValue(\"token\")\n      );\n      tas.send();\n    }\n  }\n\n  update(event) {\n    var task = this.state.task;\n    task[event.target.id] = event.target.value;\n    this.setState({\n      task: task,\n    });\n  }\n\n  save() {\n    ToastsStore.info(\"Saving\");\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          if (this.state.create) {\n            window.location.href = \"/tasks\";\n          } else {\n            ToastsStore.success(\"Saved correctly\");\n          }\n        } else {\n          console.error(http.statusText);\n          ToastsStore.error(\"Error, the changes haven't been saved\");\n        }\n      } else {\n        ToastsStore.error(\"Error, the changes haven't been saved\");\n      }\n    }.bind(this);\n    var payload = {\n      task: this.state.task,\n    };\n    if (this.state.create) {\n      http.open(\"POST\", root + \"api/tasks/create/\");\n    } else {\n      http.open(\"POST\", root + \"api/tasks/update/\");\n      payload[\"id\"] = this.state.id;\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader(\"authorization\", \"baerer \" + getCookieValue(\"token\"));\n    http.send(JSON.stringify(payload));\n  }\n\n  delete() {\n    ToastsStore.info(\"Deleting\");\n    if (window.confirm(\"Do you want to delete the task?\")) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            ToastsStore.success(\"Deleted\");\n            window.location.href = \"/tasks/\";\n          } else {\n            console.error(http.statusText);\n            ToastsStore.error(\"Error, the device hasn't been deleted\");\n          }\n        } else {\n          ToastsStore.error(\"Error, the device hasn't been deleted\");\n        }\n      };\n      http.open(\"GET\", root + \"api/tasks/delete/\" + this.state.id + \"/\");\n      http.setRequestHeader(\n        \"authorization\",\n        \"baerer \" + getCookieValue(\"token\")\n      );\n      http.send();\n    } else {\n      ToastsStore.warning(\"Ok. The device is save\");\n    }\n  }\n\n  deleteTrigger(id) {\n    // Get the task\n    var task = this.state.task;\n    var triggers = task.triggers;\n    // Get the the parent id\n    const parent = triggers[id].parent;\n    if (parent !== \"triggers\") {\n      // Delete from the parent\n      const index = triggers[parent].operation.indexOf(id);\n      triggers[parent].operation.splice(index, 1);\n      // Delete the trigger\n      delete triggers[id];\n      task.triggers = triggers;\n    } else {\n      task.triggers = {};\n    }\n    this.setState({\n      task: task,\n    });\n  }\n\n  addTriggerLogic(type, parent) {\n    // Get the triggers\n    var task = this.state.task;\n    if (parent !== \"triggers\") {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: [],\n        parent: parent,\n        type: type,\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers[\"trigger\"] = {\n        operation: [],\n        parent: \"triggers\",\n        type: type,\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task,\n    });\n  }\n\n  openTriggerAssistant(parent) {\n    this.setState({\n      trigger_assistant_parent: parent,\n    });\n  }\n\n  addTriggerOperation(type, operation) {\n    // Get the triggers\n    var task = this.state.task;\n    const parent = this.state.trigger_assistant_parent;\n    if (parent !== \"triggers\") {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: operation,\n        parent: parent,\n        type: type,\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers[\"trigger\"] = {\n        operation: operation,\n        parent: \"triggers\",\n        type: type,\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task,\n    });\n  }\n\n  closeTriggerAssistant() {\n    this.setState({\n      trigger_assistant_parent: 0,\n    });\n  }\n\n  addTarget(target) {\n    var task = this.state.task;\n    task.target.push(target);\n    this.setState({\n      task: task,\n    });\n  }\n\n  deleteTarget(id) {\n    var task = this.state.task;\n    task.target.splice(id, 1);\n    this.setState({\n      task: task,\n    });\n  }\n\n  render() {\n    const button = {\n      width: \"200px\",\n    };\n\n    const deleteButton = {\n      backgroundColor: \"red\",\n    };\n\n    const deleteButtonDisabled = {\n      backgroundColor: \"red\",\n      opacity: \"0.2\",\n    };\n\n    const separator = {\n      width: \"70%\",\n    };\n\n    const targets = this.state.task.target.map((target, i) => {\n      return (\n        <Target\n          key={i}\n          id={i}\n          target={target}\n          devices={this.state.devices}\n          delete={this.deleteTarget}\n        />\n      );\n    });\n\n    return (\n      <div className=\"page_block_container\">\n        <h2>Task</h2>\n        <hr style={separator} />\n        <div className=\"page_block_content_container\">\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">Name*</div>\n            <div className=\"two_table_cel\">\n              <input\n                type=\"text\"\n                className=\"two_input\"\n                id=\"title\"\n                defaultValue={this.state.task.title}\n                onChange={this.update}\n              />\n            </div>\n          </div>\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">Description*</div>\n            <div className=\"two_table_cel\">\n              <input\n                type=\"text\"\n                className=\"two_input\"\n                id=\"description\"\n                defaultValue={this.state.task.description}\n                onChange={this.update}\n              />\n            </div>\n          </div>\n          <hr />\n          <h2>Triggers</h2>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n          <Triggers\n            id=\"trigger\"\n            triggers={this.state.task.triggers}\n            devices={this.state.devices}\n            delete={this.deleteTrigger}\n            addTriggerLogic={this.addTriggerLogic}\n            openTriggerAssistant={this.openTriggerAssistant}\n          />\n          {this.state.trigger_assistant_parent !== 0 ? (\n            <AddTrigger\n              devices={this.state.devices}\n              status={this.state.status}\n              closeTriggerAssistant={this.closeTriggerAssistant}\n              addTriggerOperation={this.addTriggerOperation}\n            />\n          ) : (\n            \"\"\n          )}\n          <hr />\n          <h2>Targets</h2>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n          {targets}\n          <AddTarget\n            devices={this.state.devices}\n            status={this.state.status}\n            addTarget={this.addTarget}\n          />\n          <hr />\n          <div className=\"two_table_cel\">\n            <button\n              type=\"button\"\n              style={this.state.create ? deleteButtonDisabled : deleteButton}\n              onClick={this.delete}\n              disabled={this.state.create ? true : false}\n            >\n              Delete\n            </button>\n            <button type=\"button\" onClick={this.save}>\n              Save\n            </button>\n          </div>\n        </div>\n        <ToastsContainer store={ToastsStore} />\n      </div>\n    );\n  }\n}\n\nexport default Manager;\n","import React from \"react\";\nimport Switch from \"react-switch\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport getCookieValue from \"../../functions\";\nimport { root } from \"../../constants\";\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        google: {},\n        ddns: {},\n        mqtt: {},\n        apikey: \"\",\n      },\n      url: {\n        auth: \"\",\n        token: \"\",\n        fulfillment: \"\",\n      },\n      status: \"\",\n    };\n    this.update = this.update.bind(this);\n    this.enableDdnsProvider = this.enableDdnsProvider.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n              settings: data,\n              url: {\n                auth: \"https://\" + data.ddns.hostname + \"/auth/\",\n                token: \"https://\" + data.ddns.hostname + \"/token/\",\n                fulfillment: \"https://\" + data.ddns.hostname + \"/smarthome/\",\n              },\n            });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/settings/get/\");\n      http.setRequestHeader(\n        \"authorization\",\n        \"baerer \" + getCookieValue(\"token\")\n      );\n      http.send();\n    }\n\n    var url = new URL(window.location);\n    var status = url.searchParams.get(\"status\");\n    this.setState({ status });\n  }\n\n  update(event) {\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1) {\n      settings[id[0]] = event.target.value;\n    } else if (id.length === 2) {\n      settings[id[0]][id[1]] = event.target.value;\n    }\n    this.setState({\n      settings: settings,\n    });\n  }\n\n  enableDdnsProvider(checked) {\n    var settings = this.state.settings;\n    settings.ddns.enabled = checked;\n    this.setState({\n      settings: settings,\n    });\n  }\n\n  save() {\n    ToastsStore.info(\"Saving\");\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          ToastsStore.success(\"Saved correctly\");\n        } else {\n          ToastsStore.error(\"Error, the changes haven't been saved\");\n        }\n      } else {\n        ToastsStore.error(\"Error, the changes haven't been saved\");\n      }\n    };\n    http.open(\"POST\", root + \"api/settings/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader(\"authorization\", \"baerer \" + getCookieValue(\"token\"));\n    http.send(JSON.stringify(this.state.settings));\n  }\n\n  render() {\n    const google_url =\n      root + \"files/upload/google/\" + getCookieValue(\"token\") + \"/\";\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Actions on Google</h2>\n          <hr />\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Client ID</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  id=\"google/client_id\"\n                  defaultValue={this.state.settings.google.client_id}\n                  onChange={this.update}\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Client Secret</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  id=\"google/client_secret\"\n                  defaultValue={this.state.settings.google.client_secret}\n                  onChange={this.update}\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Authorization URL</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  defaultValue={this.state.url.auth}\n                  disabled\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Token URL</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  defaultValue={this.state.url.token}\n                  disabled\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Fulfillment URL</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  defaultValue={this.state.url.fulfillment}\n                  disabled\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={this.save}>\n              Save\n            </button>\n          </div>\n          <div className=\"advise\">\n            <span>\n              Actions on Google settings. It is used to authenticate with\n              Google. If you change it here, you must change it on the Actions\n              Console &#62; Develop &#62; Account Linking.\n            </span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Automatic Sync with Google</h2>\n          <hr />\n          {this.state.status}\n          <div className=\"page_block_content_container\">\n            <form\n              method=\"post\"\n              encType=\"multipart/form-data\"\n              action={google_url}\n            >\n              <input type=\"file\" name=\"file\" />\n              <button type=\"submit\">Upload</button>\n            </form>\n          </div>\n          <div className=\"advise\">\n            <span>\n              Upload the file needed for Google Auth. Read the{\" \"}\n              <a\n                href=\"https://kikeelectronico.github.io/Homeware-LAN/docs/google-auth\"\n                target=\"_blanck\"\n              >\n                instructions\n              </a>\n              .\n            </span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>MQTT</h2>\n          <hr />\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">User</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  id=\"mqtt/user\"\n                  defaultValue={this.state.settings.mqtt.user}\n                  onChange={this.update}\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Password</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  id=\"mqtt/password\"\n                  defaultValue={this.state.settings.mqtt.password}\n                  onChange={this.update}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={this.save}>\n              Save\n            </button>\n          </div>\n          <div className=\"advise\">\n            <span>\n              Important. You must configure the username and password into\n              Mosquitto manually from a terminal. This is only for telling\n              Homeware its credentials. Clear both if you don't use credentials.\n            </span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>DDNS provider</h2>\n          <hr />\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Status:</div>\n              <div className=\"two_table_cel\">\n                {this.state.settings.ddns.status}\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">IP and time:</div>\n              <div className=\"two_table_cel\">\n                {this.state.settings.ddns.ip +\n                  \" updated at \" +\n                  this.state.settings.ddns.last}\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Enable</div>\n              <div className=\"two_table_cel\">\n                <Switch\n                  onChange={this.enableDdnsProvider}\n                  checked={this.state.settings.ddns.enabled}\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Provider</div>\n              <div className=\"two_table_cel\">\n                <select\n                  name=\"type\"\n                  className=\"settings_select\"\n                  id=\"ddns/provider\"\n                  value={this.state.settings.ddns.provider}\n                  onChange={this.update}\n                >\n                  <option value=\"noip\">Noip</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Username</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  id=\"ddns/username\"\n                  defaultValue={this.state.settings.ddns.username}\n                  onChange={this.update}\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Password</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  id=\"ddns/password\"\n                  defaultValue={this.state.settings.ddns.password}\n                  onChange={this.update}\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Hostname</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  id=\"ddns/hostname\"\n                  defaultValue={this.state.settings.ddns.hostname}\n                  onChange={this.update}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={this.save}>\n              Save\n            </button>\n          </div>\n          <div className=\"advise\">\n            <span>\n              Set up the access data to the DDNS provider account. Open an issue\n              on Github if you want a DDNS provider that is not listed.\n            </span>\n          </div>\n        </div>\n        <ToastsContainer store={ToastsStore} />\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React from 'react';\n\nimport './Component.css'\n\nconst Component = (props) => (\n    <div className=\"component\">\n      <div className=\"component_text_container\">\n        <span className=\"component_text\">{ props.title }</span>\n      </div>\n      <div className=\"component_label_container\">\n        <span className={ props.status === 'Running' ? 'component_label component_label_runnig' : 'component_label component_label_stopped' }>{ props.status }</span>\n      </div>\n    </div>\n);\n\nexport default Component\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\nimport Component from '../system/Component.js'\nconst ReactMarkdown = require('react-markdown')\n\nconst COMPONENTS_CHECK_INTERVAL = 3;\n\nclass System extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      components: [],\n      show_system_message: false,\n      system_message: ''\n    }\n\n    this.loadComponents = this.loadComponents.bind(this);\n    this.upgrade = this.upgrade.bind(this);\n    this.areYouAwake = this.areYouAwake.bind(this);\n    this.restart = this.restart.bind(this);\n    this.reboot = this.reboot.bind(this);\n    this.shutdown = this.shutdown.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadComponents();\n    setInterval(this.loadComponents,COMPONENTS_CHECK_INTERVAL*1000)\n  }\n\n  loadComponents() {\n    var comp = new XMLHttpRequest();\n    comp.onload = function (e) {\n      if (comp.readyState === 4) {\n        if (comp.status === 200) {\n          var response = JSON.parse(comp.responseText);\n          var components = []\n          var keys = Object.keys(response);\n          for (var i = 0; i < keys.length; i++) {\n            components.push(response[keys[i]])\n          }\n\n          this.setState({ components: components });\n        } else {\n          console.error(comp.statusText);\n        }\n      }\n    }.bind(this);\n    comp.open(\"GET\", root + \"api/system/status/\");\n    comp.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    comp.send();\n  }\n\n  upgrade(){\n    if(window.confirm('Are you sure?')){\n      window.open(root + \"files/buckup/homeware/\" + getCookieValue('token'))\n      this.setState({\n        show_system_message: true,\n        system_message: 'Upgrading the system. It will take a couple of minutes and then you will be redirected to the home page.'\n      });\n      window.setTimeout(function() {\n        var upg = new XMLHttpRequest();\n        upg.onload = function (e) {\n          if (upg.readyState === 4) {\n            setInterval(this.areYouAwake,2000);\n          }\n        }.bind(this)\n        upg.open(\"GET\", root + \"api/system/upgrade/\");\n        upg.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n        upg.send();\n      }.bind(this),2000);\n    }\n  }\n\n  areYouAwake(){\n    var awa = new XMLHttpRequest();\n    awa.onload = function (e) {\n      if (awa.readyState === 4) {\n        if (awa.status === 200) {\n          window.location.href = '/'\n        } else {\n          console.error(awa.statusText);\n        }\n      }\n    }\n    awa.open(\"GET\", root + \"test/\");\n    awa.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    awa.send();\n  }\n\n  restart(){\n    this.setState({\n      show_system_message: true,\n      system_message: 'Restarting Homeware. It will take a couple of minutes and then you will be redirected to the home page.'\n    });\n    var res = new XMLHttpRequest();\n    res.onload = function (e) {\n      if (res.readyState === 4) {\n        setInterval(this.areYouAwake,2000);\n      }\n    }.bind(this)\n    res.open(\"GET\", root + \"api/system/restart\");\n    res.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    res.send();\n  }\n\n  reboot(){\n    this.setState({\n      show_system_message: true,\n      system_message: 'Rebooting the system. It will take a couple of minutes and then you will be redirected to the home page.'\n    });\n    var reb = new XMLHttpRequest();\n    reb.onload = function (e) {\n      if (reb.readyState === 4) {\n        setInterval(this.areYouAwake,2000);\n      }\n    }.bind(this)\n    reb.open(\"GET\", root + \"api/system/reboot\");\n    reb.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    reb.send();\n  }\n\n  shutdown(){\n    this.setState({\n      show_system_message: true,\n      system_message: 'The system will be shut down, you will lose the connection with Homeware.'\n    });\n    var shu = new XMLHttpRequest();\n    shu.open(\"GET\", root + \"api/system/shutdown\");\n    shu.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    shu.send();\n  }\n\n  render() {\n\n    const upgrade_button = {\n      width: '200px'\n    }\n\n    const git_description = {\n      marginTop: '20px',\n      marginLeft: '10%',\n      width: '80%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      paddingTop: '20px',\n      paddingBottom: '20px',\n      borderRadius: '20px',\n      border: '1px solid #aaa',\n      textAlign: 'left'\n    }\n\n    const components = this.state.components.map((component) =>\n      <Component title={ component.title } status={ component.status } enable={ component.enable } key={ component.title }/>\n    );\n\n    return (\n      <div>\n        {\n          this.state.show_system_message\n          ?\n            <div className=\"page_block_container\">\n              <h2>System message</h2>\n              <hr/>\n              <div className=\"page_block_content_container\">\n                { this.state.system_message }\n              </div>\n            </div>\n          :\n          <div>\n            <div className=\"page_block_container\">\n              <h2>System status</h2>\n              <hr/>\n              <div className=\"page_block_content_container\">\n                { components }\n              </div>\n              <div className=\"advise\">\n                <span>These are the core elements of Homeware-LAN. All must be running.</span>\n              </div>\n            </div>\n\n            <div className=\"page_block_container\">\n              <h2>System update</h2>\n              <hr/>\n              <div className=\"page_block_content_container text_left\">\n                <b>System version:</b> { this.props.version }\n                {\n                  this.props.git.code !== 200\n                  ?\n                  <div><br/> Unable to verify if there is a system update.</div>\n                  :\n                  <div>\n                    {\n                      this.props.version !== this.props.git.version\n                      ?\n                      <div>\n                        <h2>System update available - { this.props.git.version }</h2>\n                        <div style={ git_description }>\n                          <ReactMarkdown source={this.props.git.description} />\n                          <button type=\"button\" style={ upgrade_button } onClick={ this.upgrade }>Download and install</button>\n                        </div>\n                      </div>\n                      :\n                      <div><br/> The system is up to date.</div>\n                    }\n                  </div>\n                }\n\n\n              </div>\n              <div className=\"advise\">\n                <span>Verify if there is any code update and upgrade if necessary.</span>\n              </div>\n            </div>\n\n            <div className=\"page_block_container\">\n              <h2>Power</h2>\n              <hr/>\n              <div className=\"page_block_buttons_container\">\n                <button type=\"button\" onClick={ this.restart }>Restart Homeware</button>\n                <button type=\"button\" onClick={ this.reboot }>Reboot System</button>\n                <button type=\"button\" onClick={ this.shutdown }>Shutdown System</button>\n              </div>\n              <div className=\"advise\">\n                <span>Control the device and restart the Homeware-LAN installation.</span>\n              </div>\n            </div>\n          </div>\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default System\n","import React from \"react\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport getCookieValue from \"../../functions\";\nimport { root } from \"../../constants\";\n\nclass Backup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\",\n    };\n  }\n\n  componentDidMount() {\n    var url = new URL(window.location);\n    var status = url.searchParams.get(\"status\");\n    this.setState({ status });\n  }\n\n  backup() {\n    ToastsStore.info(\"Downloading\");\n    window.location =\n      root +\n      \"files/buckup/homeware/\" +\n      getCookieValue(\"token\") +\n      \"?code=\" +\n      String(Math.random());\n  }\n\n  render() {\n    const restore_url =\n      root + \"files/restore/homeware/\" + getCookieValue(\"token\") + \"/\";\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Backup</h2>\n          <hr />\n          <div className=\"page_block_content_container\">\n            <button type=\"button\" onClick={this.backup}>\n              Backup\n            </button>\n          </div>\n          <div className=\"advise\">\n            <span>Download a backup file.</span>\n          </div>\n        </div>\n        <div className=\"page_block_container\">\n          <h2>Restore</h2>\n          <hr />\n          {this.state.status}\n          <div className=\"page_block_content_container\">\n            <form\n              method=\"post\"\n              encType=\"multipart/form-data\"\n              action={restore_url}\n            >\n              <input type=\"file\" name=\"file\" />\n              <button type=\"submit\">Restore</button>\n            </form>\n          </div>\n          <div className=\"advise\">\n            <span>Restore a backup file.</span>\n          </div>\n        </div>\n        <ToastsContainer store={ToastsStore} />\n      </div>\n    );\n  }\n}\n\nexport default Backup;\n","import React from \"react\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport getCookieValue from \"../../functions\";\nimport { root } from \"../../constants\";\n\nclass Access extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        apikey: \"\",\n      },\n      change_password_message: \"\",\n      new_pass: { new_pass: \"\", new_pass_2: \"d\" },\n      equal_passwords: false,\n    };\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/access/get/\");\n    http.setRequestHeader(\"authorization\", \"baerer \" + getCookieValue(\"token\"));\n    http.send();\n  }\n\n  generateAPIKey() {\n    ToastsStore.info(\"Generating API key\");\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          // var data = JSON.parse(http.responseText);\n          window.location.href = \"/access\";\n          ToastsStore.success(\"Generated\");\n        } else {\n          console.error(http.statusText);\n          ToastsStore.error(\"Something goes wrong\");\n        }\n      } else {\n        ToastsStore.error(\"Something goes wrong\");\n      }\n    };\n    http.open(\"GET\", root + \"api/access/create/\");\n    http.setRequestHeader(\"authorization\", \"baerer \" + getCookieValue(\"token\"));\n    http.send();\n  }\n\n  checkEqualPassword = (event) => {\n    let new_pass = this.state.new_pass;\n    new_pass[event.target.id] = event.target.value;\n    let change_password_message = \"Passwords don't mach\";\n    if (new_pass.new_pass === new_pass.new_pass_2) {\n      change_password_message = \"\";\n    }\n    this.setState({\n      change_password_message: change_password_message,\n      new_pass: new_pass,\n    });\n  };\n\n  changePassword = () => {\n    ToastsStore.info(\"Changing\");\n    let new_pass = this.state.new_pass;\n    if (\n      new_pass.new_pass === new_pass.new_pass_2 &&\n      new_pass.new_pass.length > 0\n    ) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            ToastsStore.success(\"Changed\");\n          } else {\n            ToastsStore.success(\"Error, the changes haven't been saved.\");\n          }\n        } else {\n          ToastsStore.success(\"Error, the changes haven't been saved.\");\n        }\n      };\n      http.open(\"POST\", root + \"api/user/password/\");\n      http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n      http.setRequestHeader(\n        \"authorization\",\n        \"baerer \" + getCookieValue(\"token\")\n      );\n      http.send(\n        JSON.stringify({\n          pass: this.state.pass,\n          new_pass: this.state.new_pass.new_pass,\n        })\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>API key</h2>\n          <hr />\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">API Key</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"text\"\n                  className=\"two_input\"\n                  id=\"apikey\"\n                  value={this.state.data.apikey}\n                  disabled\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={this.generateAPIKey}>\n              Generate\n            </button>\n          </div>\n          <div className=\"advise\">\n            <span>\n              The API Key gives you access to the Homeware's API. Please do not\n              generate an API Key if you are not sure of what you are doing.\n            </span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Change password</h2>\n          <hr />\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">Password</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"password\"\n                  className=\"two_input\"\n                  id=\"pass\"\n                  onChange={(event) =>\n                    this.setState({ pass: event.target.value })\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">New password</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"password\"\n                  className=\"two_input\"\n                  id=\"new_pass\"\n                  onChange={this.checkEqualPassword}\n                />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">New password</div>\n              <div className=\"two_table_cel\">\n                <input\n                  type=\"password\"\n                  className=\"two_input\"\n                  id=\"new_pass_2\"\n                  onChange={this.checkEqualPassword}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"page_block_buttons_container\">\n            <div className=\"two_table_cel\">\n              <button\n                type=\"button\"\n                id=\"changePasswordButton\"\n                onClick={this.changePassword}\n              >\n                Change\n              </button>\n              <span>{this.state.change_password_message}</span>\n            </div>\n          </div>\n        </div>\n        <ToastsContainer store={ToastsStore} />\n      </div>\n    );\n  }\n}\n\nexport default Access;\n","import React from \"react\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport getCookieValue from \"../../functions\";\nimport { root } from \"../../constants\";\n\nimport \"./Logs.css\";\n\nclass Logs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 1,\n    };\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.downloadLog = this.downloadLog.bind(this);\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data.reverse() });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/log/get/\");\n    http.setRequestHeader(\"authorization\", \"baerer \" + getCookieValue(\"token\"));\n    http.send();\n  }\n\n  previousPage() {\n    if (this.state.page > 1) this.setState({ page: this.state.page - 1 });\n  }\n\n  nextPage() {\n    if (this.state.page < this.state.data.length / 10 - 1)\n      this.setState({ page: this.state.page + 1 });\n  }\n\n  downloadLog() {\n    ToastsStore.info(\"Downloading\");\n    window.location = root + \"files/download/log/\" + getCookieValue(\"token\");\n  }\n\n  render() {\n    const homeware_lan_log_data = this.state.data.slice(\n      0,\n      this.state.page * 10\n    );\n    const homeware_lan_log = homeware_lan_log_data.map((register, i) => (\n      <div className=\"logs_line\" key={i}>\n        {register.severity === \"Log\" ? <b>{register.severity}</b> : \"\"}\n        {register.severity === \"Warning\" ? (\n          <b className=\"logs_yellow\">{register.severity}</b>\n        ) : (\n          \"\"\n        )}\n        {register.severity === \"Alert\" ? (\n          <b className=\"logs_red\">{register.severity}</b>\n        ) : (\n          \"\"\n        )}\n        - {register.time}\n        <br />\n        {register.message}\n      </div>\n    ));\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Homeware-LAN log</h2>\n          <hr />\n          <div>{homeware_lan_log}</div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={this.nextPage}>\n              Load more\n            </button>\n            <button type=\"button\" onClick={this.downloadLog}>\n              Download\n            </button>\n          </div>\n        </div>\n        <ToastsContainer store={ToastsStore} />\n      </div>\n    );\n  }\n}\n\nexport default Logs;\n","import React from 'react';\nimport { root } from '../../constants'\n\nimport './Login.css'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_message: false,\n      message: ''\n    }\n    this.login = this.login.bind(this);\n    this.grantAccess = this.grantAccess.bind(this);\n  }\n\n  login() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      var response = JSON.parse(http.responseText);\n      if(response['status'] === 'in'){\n        document.cookie = \"user=\" + response['user'] + \"; path=/\";\n        document.cookie = \"token=\" + response['token'] + \"; path=/\";\n        window.location = '/';\n      } else if (response['status'] === 'fail'){\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/login/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  grantAccess() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.responseText !== 'fail')\n        window.location = http.responseText;\n      else {\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/googleSync/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  render() {\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"login_form_container\">\n        { window.location.href.includes('google') ? <p>Google request access to Homeware-Lan</p> : '' }\n        <br/>\n        <span className=\"login_element\">Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span className=\"login_element\">Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" className=\"login_element\" onClick={ !window.location.href.includes('google') ? this.login : this.grantAccess }>{ !window.location.href.includes('google') ? <span>Login</span> : <span>Grant access</span> }</button>\n        <br/>\n        { message }\n      </div>\n    );\n  }\n}\n\nexport default Login\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\nimport getCookieValue from './functions'\nimport { root } from './constants'\n\nimport MenuElement from './components/web/MenuElement'\nimport Modal from './components/web/Modal'\nimport Devices from './components/pages/Devices'\nimport Editor from './components/pages/Editor'\nimport Info from './components/pages/Info'\nimport Connecting from './components/pages/Connecting'\nimport Tasks from './components/pages/Tasks'\nimport Manager from './components/pages/Manager'\nimport Settings from './components/pages/Settings'\nimport System from './components/pages/System'\nimport Backup from './components/pages/Backup'\nimport Access from './components/pages/Access'\nimport Logs from './components/pages/Logs'\nimport Login from './components/pages/Login'\n\nconst GIT_CHECKOUT_INTERVAL = 600;\nconst LOG_CHECKOUT_INTERVAL = 5\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: false,\n      alert: \"clear\",\n      version: \"\",\n      git: {\n        code: \"\",\n        version: 0\n      }\n    }\n    this.checkoutVersion = this.checkoutVersion.bind(this);\n    this.checkoutLog = this.checkoutLog.bind(this);\n    this.logout = this.logout.bind(this);\n    this.menu = this.menu.bind(this);\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          if (data.status !== 'in' && !window.location.href.includes('login'))\n            window.location.href = '/login/'\n          else if (data.status === 'in')\n            this.setState({\n              session: true\n            });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/validateToken/\");\n    http.setRequestHeader('token', getCookieValue('token'))\n    http.setRequestHeader('user', getCookieValue('user'))\n    http.send();\n\n    this.checkoutVersion();\n    window.setInterval(this.checkoutVersion,GIT_CHECKOUT_INTERVAL*1000)\n    this.checkoutLog();\n    window.setInterval(this.checkoutLog,LOG_CHECKOUT_INTERVAL*1000)\n  }\n\n  checkoutVersion() {\n\n    var vers = new XMLHttpRequest();\n    vers.onload = function (e) {\n      if (vers.readyState === 4) {\n        if (vers.status === 200) {\n          var version = JSON.parse(vers.responseText);\n          this.setState({ version: version.version });\n        } else {\n          console.error(vers.statusText);\n        }\n      }\n    }.bind(this);\n    vers.open(\"GET\", root + \"api/global/version/\");\n    vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    vers.send();\n\n    var git = new XMLHttpRequest();\n    git.onload = function (e) {\n      if (git.readyState === 4) {\n        if (git.status === 200) {\n          const latestRelease = JSON.parse(git.responseText);\n          this.setState({ git: {\n            version: latestRelease.tag_name,\n            description: latestRelease.body,\n            code: 200\n            }\n          });\n        } else if (git.status === 403) {\n        this.setState({\n          git: {\n            code: \"\",\n            version: 403\n          }\n        });\n        } else {\n          console.error(git.statusText);\n        }\n      }\n    }.bind(this);\n    git.open(\"GET\", 'https://api.github.com/repos/kikeelectronico/Homeware-LAN/releases/latest');\n    git.send();\n  }\n\n  checkoutLog() {\n    var vers = new XMLHttpRequest();\n    vers.onload = function (e) {\n      if (vers.readyState === 4) {\n        if (vers.status === 200) {\n          const alert = JSON.parse(vers.responseText)\n          this.setState({\n            \"alert\": alert.alert\n          });\n        } else {\n          console.error(vers.statusText);\n        }\n      }\n    }.bind(this);\n    vers.open(\"GET\", root + \"api/log/alert/\");\n    vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    vers.send();\n  }\n\n  logout() {\n    document.cookie = \"user=; path=/\";\n    document.cookie = \"token=; path=/\";\n    this.setState({\n      session: false\n    });\n    window.location.href = '/'\n  }\n\n  menu() {\n    document.getElementById('menuIcon').classList.toggle(\"change_menu_icon\");\n    document.getElementById('menu').classList.toggle(\"menu_show_up\");\n  }\n\n  render() {\n\n    if (!this.state.session && !window.location.href.includes('login'))\n      return ''\n    else if (window.location.href.includes('login'))\n      return (\n        <div className=\"Clear_app\">\n          <Login/>\n        </div>\n      );\n    else\n      return (\n        <Router>\n          <div className=\"App\">\n            <div className=\"upper-menu\">\n              <div className=\"menu_icon_container\" id=\"menuIcon\" onClick={this.menu}>\n                <div className=\"menu_icon_bar_1\"></div>\n                <div className=\"menu_icon_bar_2\"></div>\n                <div className=\"menu_icon_bar_3\"></div>\n              </div>\n              <div className=\"uppper_menu_title_container\">\n                <h1 className=\"uppper_menu_title\">Homeware-LAN</h1>\n                <div className=\"uppper_menua_alert\">\n                  {\n                    this.state.alert === \"set\"\n                    ?\n                      <Modal trigger={<img src=\"/global/alert_icon.png\" alt=\"bell\" className=\"alert_icon\"/>} title=\"Alert\" content={<p>See the system log</p>} />\n                    :\n                    \"\"\n                  }\n                </div>\n              </div>\n            </div>\n            <div className=\"main-app\">\n              <div className=\"menu\" id=\"menu\">\n                <div>\n                  <MenuElement image=\"/menu/devices_icon.png\" title=\"Devices\" href=\"/devices\"/>\n                  <MenuElement image=\"/menu/tasks_icon.png\" title=\"Tasks\" href=\"/tasks\"/>\n                  <MenuElement image=\"/menu/settings_icon.png\" title=\"Settings\" href=\"/settings\"/>\n                  <MenuElement image=\"/menu/status_icon.png\" title=\"System\" href=\"/system\"/>\n                  <MenuElement image=\"/menu/backup_icon.png\" title=\"Backup\" href=\"/backup\"/>\n                  <MenuElement image=\"/menu/access_icon.png\" title=\"Access\" href=\"/access\"/>\n                  <MenuElement image=\"/menu/logs_icon.png\" title=\"Logs\" href=\"/logs\"/>\n                  <hr/>\n                  <MenuElement image=\"/menu/repo_icon.png\" title=\"Repo\" exec={ ()=>{window.location.href = \"https://github.com/kikeelectronico/Homeware-LAN\"} }/>\n                  <MenuElement image=\"/menu/help_icon.png\" title=\"How to\" exec={ ()=>{window.location.href = \"https://kikeelectronico.github.io/Homeware-LAN/\"} }/>\n                  <hr/>\n                  <MenuElement image=\"/menu/logout_icon.png\" title=\"Logout\" exec={ this.logout }/>\n                </div>\n                <div className=\"menu_data\">\n                  {\n                    this.state.git.version !== this.state.version && this.state.git.version !== ''\n                    ?\n                    <Link to=\"/system\" className=\"text_decoration_none\">\n                      <div className=\"menu_data_alert\">New update available</div>\n                    </Link>\n                    :\n                    \"\"\n                  }\n                  <p className=\"menu_data_version\">Version: { this.state.version }</p>\n                </div>\n              </div>\n              <div className=\"page\">\n                <Route exact={ true } path=\"/\"> <Devices/> </Route>\n                <Route exact={ true } path=\"/devices\"> <Devices/> </Route>\n                <Route path=\"/devices/editor\"> <Editor/> </Route>\n                <Route path=\"/devices/info\"> <Info/> </Route>\n                <Route path=\"/devices/connecting\"> <Connecting/> </Route>\n                <Route exact={ true } path=\"/tasks\"> <Tasks/> </Route>\n                <Route path=\"/tasks/manager\"> <Manager/> </Route>\n                <Route path=\"/settings\"> <Settings/> </Route>\n                <Route path=\"/system\"> <System git={this.state.git} version={this.state.version}/> </Route>\n                <Route path=\"/backup\"> <Backup/> </Route>\n                <Route path=\"/access\"> <Access/> </Route>\n                <Route path=\"/logs\"> <Logs/> </Route>\n              </div>\n            </div>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}